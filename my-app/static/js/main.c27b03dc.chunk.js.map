{"version":3,"sources":["components/movieTableComponents/AdditionalTasksHeader.js","constants/filterConstants.js","constants/pageActionsConsts.js","components/movieTableComponents/TableHeader.js","components/movieTableComponents/PageFooter.js","constants/movieActionsConsts.js","constants/backendConstants.js","utils/xmlUtils.js","notifications/sendNotification.js","actions/movieActions.js","components/movieTableComponents/TableRow.js","components/movieTableComponents/MovieList.js","constants/coordinatesActionsConsts.js","actions/coordinatesActions.js","components/movieTableComponents/MovieTable.js","components/movieTableComponents/TablePage.js","components/customFormComponents/rendetedInputField.js","constants/enumConstants.js","validators/required.js","constants/personActionsConsts.js","actions/personsActions.js","components/editForms/MovieEditForm.js","components/editPages/MovieEditPage.js","components/createForms/CreateMovieForm.js","components/createPages/CreateMoviePage.js","components/filterForms/IdFilterForm.js","components/filterPages/IdFilterPage.js","components/filterForms/NameFilterForm.js","components/filterPages/NameFilterPage.js","components/filterForms/CoordinateFilterForm.js","components/filterPages/CoordinateFilterPage.js","components/filterForms/DateFilterForm.js","components/filterPages/DateFilterPage.js","components/filterForms/OscarFilterForm.js","components/filterPages/OscarFilterPage.js","components/filterForms/DurationFilterForm.js","components/filterPages/DurationFilterPage.js","components/filterForms/GenreFilterForm.js","components/filterPages/GenreFilterPage.js","components/filterForms/RatingFilterForm.js","components/filterPages/RatingFilterPage.js","components/filterForms/ScreenWriterFilterForm.js","components/filterPages/ScreenWriterFilterPage.js","components/modal/Modal.js","components/editForms/EditCoordinatesForm.js","components/editPages/EditCoordinatesPage.js","components/createForms/CreateCoordinatesForm.js","components/createPages/CreateCoordinatesPage.js","constants/locationActionsConsts.js","actions/locationsActions.js","components/editForms/LocationEditForm.js","components/editPages/LocationEditPage.js","components/createForms/CreateLocationForm.js","components/createPages/CreateLocationPage.js","components/editForms/EditPersonForm.js","components/editPages/EditPersonPage.js","components/createForms/CreatePersonForm.js","components/createPages/CreatePersonPage.js","constants/additionalActionsConsts.js","components/additionalTasks/GenreTaskPage.js","actions/additionalTasksActions.js","components/additionalTasks/DurationTaskPage.js","personTableComponents/PersonTableHeader.js","personTableComponents/PersonTableRow.js","personTableComponents/PersonList.js","personTableComponents/PersonTable.js","components/additionalTasks/ScreenwriterTaskPage.js","components/App.js","reducer/movieReducer.js","reducer/pageReducer.js","reducer/coordinatesReducer.js","reducer/locationReducer.js","reducer/personReducer.js","reducer/additionalTasksReducer.js","reducer/rootReducer.js","index.js"],"names":["AdditionalTasksHeader","history","useHistory","className","id","onClick","evt","preventDefault","push","ID","NAME","COORDINATE","DATE","OSCAR","DURATION","GENRE","RATING","WRITER","SET_PER_PAGE","SET_CUR_PAGE","SET_CUR_CRITERION","SET_ITEM_COUNT","DELETE_MOVIE","SET_SORT","REMOVE_SORT","SHOW_MODAL","SET_FILTER","REMOVE_FILTER","TableHeader","dispatch","useDispatch","sort","useSelector","state","page","sortBy","filters","currentCriterion","curCriterion","sortHandler","criterion","element","document","getElementById","includes","type","payload","style","color","setActive","value","console","log","name","PageFooter","perPage","currentPage","itemCount","useState","localPerPage","setLocalPerPage","localCurPage","setLocalCurPage","changePage","onChange","event","input","target","onFocus","onBlur","Number","isInteger","contentEditable","SET_MOVIES","SET_EDITED_MOVIE","MOVIE_SERVLET","LOCATION_SERVLET","COORD_SERVLET","PERSON_SERVLET","ADDITIONAL_SERVLET","BASE","require","serverException","msg","exception","message","position","autoDismiss","getMovies","curPage","criteria","length","result","substring","parseSortByParameter","filterBy","filter","from","to","like","xfrom","xto","yfrom","yto","parseFilters","fetch","method","headers","then","response","ok","text","JSON","parse","count","movies","movieList","catch","error","errorMessage","Notifications","transferFormDataToMovieDTO","form","creationDate","duration","genre","mpaaRating","oscarsCount","coordinates","director","screenwriter","location","locations","TableRow","props","movie","movieId","deleteHandler","deleteMovie","x","y","toLowerCase","undefined","MovieList","listItems","numbers","Array","isArray","map","SET_COORDINATES","SET_EDITED_COORDINATES","getCoordinates","status","coordinatesList","transferFormDataToCoordinatesDTO","MovieTable","useEffect","deleteItem","TablePage","renderedInputField","label","readonly","meta","touched","warning","placeholder","readOnly","rating","genres","colors","required","SET_PERSONS","SET_EDITED_PERSON","getPerson","personsList","weight","passportID","eyeColor","birthday","reduxForm","keepDirtyOnReinitialize","handleSubmit","submitting","pristine","reset","editedMovie","screenWriter","personList","locationsList","person","getSingleMovie","initialize","onSubmit","Field","component","o","selected","validate","disabled","MovieEditPage","useParams","formData","body","stringify","window","reload","updateMovie","debug","CreateMoviePage","createMovie","numberField","onSubmitSuccess","IdFilterPage","textField","NameFilterPage","CoordinateFilterPage","dateField","onKeyDown","validDate","moment","isValid","ev","keycode","keyCode","which","ipLength","DateFilterPage","DateFilterForm","OscarFilterPage","DurationFilterPage","values","errors","compare","GenreFilterPage","validateRadioGroupIsNotEmpty","RatingFilterPage","ScreenWriterFilterPage","Modal","active","children","e","stopPropagation","editedCoordinates","getSingleCoordinates","EditCoordinatesPage","updateCoordinates","CreateCoordinatesPage","createCoordinates","SET_LOCATIONS","SET_EDITED_LOCATION","getLocations","editedLocation","getSingleLocation","goBack","updateLocation","CreateLocationPage","createLocation","editedPerson","locationList","getSinglePerson","EditPersonPage","updatePerson","CreatePersonPage","createPerson","SET_GENRE_COUNT","SET_GENRE","SET_LENGTH","SET_LENGTH_COUNT","SET_SCREENWRITER","SET_SCREENWRITER_LIST","GenreTaskPage","localGenre","setLocalGenre","genreCount","additional","listen","action","DurationTaskPage","durationCount","lengthCount","localDuration","setLocalDuration","url","PersonTableHeader","PersonTableRow","personId","PersonList","screenwriterList","PersonTable","ScreenwriterTaskPage","localDirector","setLocalDirector","createBrowserHistory","App","notifications","modalActive","path","LocationEditPage","exact","initialState","rootReducer","combineReducers","item","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","render"],"mappings":"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","file":"static/js/main.c27b03dc.chunk.js","sourcesContent":["import '../../css/filter-header.css';\nimport '../../css/app.css';\nimport {useHistory} from \"react-router-dom\";\n\nfunction AdditionalTasksHeader() {\n    const history = useHistory();\n\n    function handleDurationClick(evt) {\n        evt.preventDefault();\n        history.push(\"/my-app/additional/duration\");\n    }\n\n    function handleGenreClick(evt) {\n        evt.preventDefault();\n        history.push(\"/my-app/additional/genre\");\n    }\n\n    function handleScreenwriterClick(evt) {\n        evt.preventDefault();\n        history.push(\"/my-app/additional/screenwriter\");\n    }\n\n    return (\n        <div className=\"filter-header base\">\n            <div className={\"tasks-div\"}>\n                <button id=\"new-movie-but\" onClick={handleGenreClick}>\n                    Genre add. task\n                </button>\n                <button id=\"new-movie-but\" onClick={handleDurationClick}>\n                    Duration add. task\n                </button>\n                <button id=\"new-movie-but\" onClick={handleScreenwriterClick}>\n                    Director add. task\n                </button>\n            </div>\n        </div>\n    // <div className=\"filter-header base\">\n    //\n    // </div>\n    );\n}\n\nexport default AdditionalTasksHeader;\n","const ID = \"id\";\nconst NAME = \"name\";\nconst COORDINATE = \"coordinate\";\nconst DATE = \"date\";\nconst OSCAR = \"oscar\";\nconst DURATION = \"duration\";\nconst GENRE = \"genre\";\nconst RATING = \"rating\";\nconst WRITER = \"screenWriter\";\nconst EDIT_COORD = \"editCoord\"\nexport {ID, NAME, COORDINATE, DATE, OSCAR, DURATION, GENRE, RATING, WRITER, EDIT_COORD};","export const SET_PER_PAGE = 'SET_PER_PAGE';\nexport const SET_CUR_PAGE = 'SET_CUR_PAGE';\nexport const SET_CUR_CRITERION = 'SET_CUR_CRITERION';\nexport const SET_ITEM_COUNT = 'SET_ITEM_COUNT';\nexport const DELETE_MOVIE = 'DELETE_MOVIE';\nexport const SET_SORT = 'SET_SORT';\nexport const REMOVE_SORT = 'REMOVE_SORT';\nexport const SHOW_MODAL = 'SHOW_MODAL';\nexport const SET_FILTER = 'SET_FILTER';\nexport const REMOVE_FILTER = 'REMOVE_FILTER';\n","import '../../css/table-header.css';\nimport '../../css/app.css';\nimport {FaFilter, FaSortAmountDown} from 'react-icons/fa';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {COORDINATE, DATE, DURATION, GENRE, ID, NAME, OSCAR, RATING, WRITER} from '../../constants/filterConstants';\nimport {REMOVE_FILTER, REMOVE_SORT, SET_CUR_CRITERION, SET_SORT, SHOW_MODAL} from \"../../constants/pageActionsConsts\";\n\n\nfunction TableHeader() {\n    const dispatch = useDispatch();\n    const sort = useSelector(state => state.page.sortBy);\n    const filters = useSelector(state => state.page.filters);\n    const currentCriterion = useSelector(state => state.page.curCriterion);\n\n    function sortHandler(criterion) {\n        let element = document.getElementById(\"sort-\" + criterion);\n        if (!sort.includes(criterion)) {\n            dispatch({\n                type: SET_SORT,\n                payload: criterion\n            });\n            element.style.color = \"rgb(255,255,255)\";\n        } else {\n            dispatch({\n                type: REMOVE_SORT,\n                payload: criterion\n            });\n            element.style.color = \"rgba(255,255,255,0.5)\";\n        }\n    }\n\n    function setActive(value, criterion) {\n        console.log(\"CUR = \" + currentCriterion);\n        let element = document.getElementById(\"filter-\" + criterion);\n        for (const filter of filters) {\n            if (filter.name === criterion) {\n                dispatch({\n                    type: REMOVE_FILTER,\n                    payload: criterion\n                });\n                element.style.color = \"rgba(255,255,255,0.5)\";\n                return;\n            }\n        }\n        if (value) {\n            dispatch({\n                type: SET_CUR_CRITERION,\n                payload: criterion\n            });\n        }\n        dispatch({\n            type: SHOW_MODAL,\n            payload: value\n        });\n    }\n\n    return (\n        <div className=\"table-header base\" id=\"table-header\">\n\n            <div className=\"id-div\">\n                <span>Id</span>\n                <FaSortAmountDown color=\"rgba(255,255,255,0.5)\" className=\"pointer\" id=\"sort-id\"\n                                  onClick={() => sortHandler(ID)}/>\n                <FaFilter color=\"rgba(255,255,255,0.5)\" className=\"pointer\" id=\"filter-id\"\n                          onClick={() => setActive(true, ID)}/>\n            </div>\n            <div>\n                <span>Name</span>\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-name\"\n                                  onClick={() => sortHandler(NAME)}/>\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-name\"\n                          onClick={() => setActive(true, NAME)}/>\n            </div>\n            <div>\n                <span>Coordinates</span>\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-coordinate\"\n                                  onClick={() => sortHandler(COORDINATE)}/>\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-coordinate\"\n                          onClick={() => setActive(true, COORDINATE)}/>\n            </div>\n            <div>\n                <span>Creation Date</span>\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-date\"\n                                  onClick={() => sortHandler(DATE)}/>\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-date\"\n                          onClick={() => setActive(true, DATE)}/>\n            </div>\n            <div>\n                <span>Oscars</span>\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-oscar\"\n                                  onClick={() => sortHandler(OSCAR)}/>\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-oscar\"\n                          onClick={() => setActive(true, OSCAR)}/>\n            </div>\n            <div>\n                <span>Duration</span>\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-duration\"\n                                  onClick={() => sortHandler(DURATION)}/>\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-duration\"\n                          onClick={() => setActive(true, DURATION)}/>\n            </div>\n            <div>\n                <span>Genre</span>\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-genre\"\n                                  onClick={() => sortHandler(GENRE)}/>\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-genre\"\n                          onClick={() => setActive(true, GENRE)}/>\n            </div>\n            <div>\n                <span>Rating</span>\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-rating\"\n                                  onClick={() => sortHandler(RATING)}/>\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-rating\"\n                          onClick={() => setActive(true, RATING)}/>\n            </div>\n            <div>\n                <span>Director</span>\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-screenWriter\"\n                                  onClick={() => sortHandler(WRITER)}/>\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-screenWriter\"\n                          onClick={() => setActive(true, WRITER)}/>\n            </div>\n            <div>\n                <span>Action</span>\n            </div>\n        </div>\n    );\n}\n\nexport default TableHeader;\n","import '../../css/page-footer.css';\nimport '../../css/app.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {SET_CUR_PAGE, SET_PER_PAGE} from \"../../constants/pageActionsConsts\";\nimport {BsPlusCircleFill, IoMdArrowRoundBack, IoMdArrowRoundForward} from \"react-icons/all\";\n\nfunction PageFooter() {\n    const perPage = useSelector(state => state.page.perPage);\n    const currentPage = useSelector(state => state.page.currentPage);\n    const itemCount = useSelector(state => state.page.itemCount);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const [localPerPage, setLocalPerPage] = useState(\"10\");\n    const [localCurPage, setLocalCurPage] = useState(\"1\");\n\n    function handleOnChangePerPage(event) {\n        let input = event.target.value;\n        setLocalPerPage(input);\n    }\n\n    function handleOnFocusPerPage(event) {\n        setLocalPerPage(\"\");\n    }\n\n    function handleOnBlurPerPage(event) {\n        let input = event.target.value;\n        if (input !== \"\" && Number.isInteger(Number(input)) && Number(input) > 0)\n            dispatch({\n                type: SET_PER_PAGE,\n                payload: input\n            });\n        else {\n            setLocalPerPage(\"10\")\n            dispatch({\n                type: SET_PER_PAGE,\n                payload: 10\n            });\n        }\n    }\n\n    function handleOnChangeCurPage(event) {\n        let input = event.target.value;\n        setLocalCurPage(input);\n    }\n\n    function handleOnFocusCurPage(event) {\n        setLocalCurPage(\"\");\n    }\n\n    function handleOnBlurCurPage(event) {\n        let input = event.target.value;\n        dispatch({\n            type: SET_CUR_PAGE,\n            payload: input\n        });\n        if (input !== \"\" && Number.isInteger(Number(input)) && Number(input) > 0)\n            dispatch({\n                type: SET_CUR_PAGE,\n                payload: input\n            });\n        else {\n            setLocalCurPage(\"1\")\n            dispatch({\n                type: SET_CUR_PAGE,\n                payload: 1\n            });\n        }\n    }\n\n    function createHandler() {\n        history.push(\"/my-app/new\");\n    }\n\n    function changePage(value) {\n        if (value > 0 && ((value - 1) * perPage - itemCount) < 0) {\n            setLocalCurPage(value);\n            dispatch({\n                type: SET_CUR_PAGE,\n                payload: value\n            });\n        }\n\n    }\n\n\n    return (\n        <div className=\"footer base\">\n            <button id=\"new-movie-but\" onClick={() => createHandler()}>\n                <div className={\"icon-but\"}>\n                    <div className={\"icon\"}>\n                        <BsPlusCircleFill color={\"#777777\"}/>\n                    </div>\n                    ADD MOVIE\n                </div>\n            </button>\n            <div className=\"page-footer\">\n                <span>Per Page</span>\n                <input id=\"current-num\" value={localPerPage} onChange={handleOnChangePerPage}\n                       onFocus={handleOnFocusPerPage} onBlur={handleOnBlurPerPage}/>\n                <span>Total</span>\n                <input id=\"current-page\" value={itemCount} contentEditable={\"false\"}/>\n                <div id={\"left-arrow\"}>\n                    <IoMdArrowRoundBack className=\"pointer\" color=\"#777777\"\n                                        onClick={() => changePage(currentPage - 1)}/>\n                </div>\n                <input id=\"current-page\" value={localCurPage} onChange={handleOnChangeCurPage}\n                       onFocus={handleOnFocusCurPage} onBlur={handleOnBlurCurPage}/>\n                <div id={\"right-arrow\"}>\n                    <IoMdArrowRoundForward className=\"pointer\" color=\"#777777\"\n                                           onClick={() => changePage(currentPage + 1)}/>\n                </div>\n\n            </div>\n        </div>\n\n    );\n}\n\nexport default PageFooter;\n","export const SET_MOVIES = 'SET_MOVIES';\nexport const SET_EDITED_MOVIE = 'SET_EDITED_MOVIE';\nexport const SET_SCREENWRITER_EDITED_MOVIE = 'SET_SCREENWRITER_EDITED_MOVIE';\n","export const MOVIE_SERVLET = \"movies\"\nexport const LOCATION_SERVLET = \"locations\"\nexport const COORD_SERVLET = \"coordinates\"\nexport const PERSON_SERVLET = \"persons\"\nexport const ADDITIONAL_SERVLET = \"additional\"\nexport const BASE = \"http://localhost:8080/my-app/\"\n\n//export const BASE = \"http://localhost:8080/demo1_war_exploded/\"\n//export const BASE = \"http://localhost:8080/demo1-1.0-SNAPSHOT/\"\n//export const HEADER = 'Content-Type': 'application/xml; charset=utf-8'\n//export const BASE = \"/my-app/\";","export function nativeType(value) {\n    var nValue = Number(value);\n    if (!isNaN(nValue)) {\n        return nValue;\n    }\n    var bValue = value.toLowerCase();\n    if (bValue === 'true') {\n        return true;\n    } else if (bValue === 'false') {\n        return false;\n    }\n    return value;\n}\n\nexport var removeJsonTextAttribute = function (value, parentElement) {\n    try {\n        var keyNo = Object.keys(parentElement._parent).length;\n        var keyName = Object.keys(parentElement._parent)[keyNo - 1];\n        parentElement._parent[keyName] = nativeType(value);\n    } catch (e) {\n    }\n}\n\nexport let options = {\n    compact: true,\n    /*trim: true,\n    ignoreDeclaration: true,\n    ignoreInstruction: true,\n    ignoreAttributes: true,\n    ignoreComment: true,\n    ignoreCdata: true,\n    ignoreDoctype: true,*/\n    textFn: removeJsonTextAttribute\n};\n\nexport let options1 = {\n    compact: true,\n    fullTagEmptyElement: true\n};\n\nexport const convert = require('xml-js');","export const serverException = (msg) => {\n    let exception = {};\n    exception.title = \"Произошла ошибка\";\n    exception.message = msg;\n    exception.position = \"tr\";\n    exception.autoDismiss = 3;\n    return exception;\n}\n","import {history} from '../components/App.js';\nimport {DELETE_MOVIE, SET_ITEM_COUNT} from \"../constants/pageActionsConsts\";\nimport {SET_EDITED_MOVIE, SET_MOVIES} from \"../constants/movieActionsConsts\";\nimport {COORDINATE, DATE, DURATION, GENRE, ID, NAME, OSCAR, RATING, WRITER} from \"../constants/filterConstants\";\nimport {BASE, MOVIE_SERVLET} from \"../constants/backendConstants\";\nimport {convert, options, options1} from \"../utils/xmlUtils\";\nimport Notifications from 'react-notification-system-redux';\nimport {serverException} from \"../notifications/sendNotification\";\n\n\nfunction parseSortByParameter(criteria) {\n    if (criteria.length === 0) {\n        return \"\";\n    }\n    let result = \"&sortBy=\";\n    for (const criterion of criteria) {\n        result = result + criterion + \";\";\n    }\n    return result.substring(0, result.length - 1);\n}\n\nfunction parseFilters(filters) {\n    if (filters.length === 0) {\n        return \"\";\n    }\n    let result = \"&filterBy=\";\n    for (const filter of filters) {\n        switch (filter.name) {\n            case ID:\n                result = result + ID + \",\" + filter.from + \",\" + filter.to + \";\"\n                break;\n            case NAME:\n                result = result + NAME + \",\" + filter.like + \";\"\n                break;\n            case OSCAR:\n                result = result + OSCAR + \",\" + filter.from + \",\" + filter.to + \";\"\n                break;\n            case DURATION:\n                result = result + DURATION + \",\" + filter.from + \",\" + filter.to + \";\"\n                break;\n            case RATING:\n                result = result + RATING + \",\" + filter.like + \";\"\n                break;\n            case GENRE:\n                result = result + GENRE + \",\" + filter.like + \";\"\n                break;\n            case DATE:\n                result = result + DATE + \",\" + filter.from + \",\" + filter.to + \";\"\n                break;\n            case WRITER:\n                result = result + WRITER + \",\" + filter.like + \";\"\n                break;\n            case COORDINATE:\n                result = result + COORDINATE + \",\" + filter.xfrom + \",\" + filter.xto + \",\" + filter.yfrom + \",\" + filter.yto + \";\"\n                break;\n            default:\n                break;\n        }\n    }\n    return result.substring(0, result.length - 1);\n}\n\nexport function getMovies(page) {\n    let perPage = page.perPage;\n    let curPage = page.currentPage;\n    let sortBy = parseSortByParameter(page.sortBy);\n    let filterBy = parseFilters(page.filters)\n    return (dispatch) => {\n        const url = BASE + MOVIE_SERVLET +\n            \"?perPage=\" + perPage + \"\" +\n            \"&curPage=\" + curPage +\n            sortBy +\n            filterBy;\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                //'Content-Type': 'application/xml; charset=utf-8'\n            },\n        })\n            .then(response => {\n                //console.log(response)\n                //alert(response.text())\n                if (!response.ok) {\n                    throw response;\n                } else return response.text();\n            })\n            .then(response => {\n                //const convert = require('xml-js');\n                //const result = JSON.parse(response)\n                const result = JSON.parse(response)\n                //console.log(result)\n                // alert(response)\n                // alert(result.movieList)\n\n                const count = result.count;\n                const movies = result.movieList;\n                dispatch({\n                    type: SET_MOVIES,\n                    payload: movies\n                });\n                dispatch({\n                    type: SET_ITEM_COUNT,\n                    payload: count\n                });\n            })\n            .catch(error => {\n                //alert(error.text)\n                error.text()\n                    .then(errorMessage => {\n                        //const convert = require('xml-js');\n                        //const result = JSON.parse(response)\n                        const result = JSON.parse(errorMessage)\n                        const msg = result.message;\n                        dispatch(Notifications.error(serverException(msg)));\n                    })\n            });\n    }\n}\n\n\nexport function deleteMovie(id) {\n    return (dispatch) => {\n        const url = BASE + MOVIE_SERVLET + \"/\" + id;\n        fetch(url, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n        })\n            .then(response => {\n                if (!response.ok)\n                    throw response;\n                else {\n                    dispatch({type: DELETE_MOVIE});\n                }\n            })\n            .catch(error => {\n                error.text()\n                    .then(errorMessage => {\n                        //const convert = require('xml-js');\n                        //const result = JSON.parse(response)\n                        const result = JSON.parse(errorMessage)\n                        const msg = result.message;\n                        dispatch(Notifications.error(serverException(msg)));\n                    })\n            });\n    }\n}\n\nexport function updateMovie(movie) {\n    //let xml = convert.js2xml(transferFormDataToMovieDTO(movie), options1);\n    //let json = JSON.stringify(transferFormDataToMovieDTO(movie));\n    let body = {\n        movieList : [transferFormDataToMovieDTO(movie)]\n    }\n    console.log(\"XML = \" + JSON.stringify(body));\n    //alert(JSON.stringify(body))\n    return (dispatch) => {\n        const url = BASE + MOVIE_SERVLET;\n        fetch(url, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n            body: JSON.stringify(body)\n        })\n            .then(response => {\n                if (!response.ok)\n                    throw response;\n                history.push(\"/my-app\");\n                window.location.reload(false);\n            })\n            .catch(error => {\n                error.text()\n                    .then(errorMessage => {\n                        //const convert = require('xml-js');\n                        //const result = JSON.parse(response)\n                        const result = JSON.parse(errorMessage)\n                        const msg = result.message;\n                        dispatch(Notifications.error(serverException(msg)));\n                    })\n            });\n    }\n}\n\nfunction transferFormDataToMovieDTO(form) {\n    let result = {};\n    result.id = form.id;\n    result.name = form.name;\n    result.creationDate = form.duration;\n    result.genre = form.genre;\n    result.mpaaRating = form.mpaaRating;\n    result.oscarsCount = form.oscarsCount;\n    result.coordinates = {};\n    result.coordinates.id = form.coordinates;\n    result.director = {};\n    result.director.id = form.screenwriter;\n    result.director.location = {};\n    result.director.location.id = form.locations;\n    return result;\n}\n\nexport function createMovie(movie) {\n    let body = {\n        movieList : [transferFormDataToMovieDTO(movie)]\n    }\n    console.log(\"XML = \" + body);\n    return (dispatch) => {\n        const url = BASE + MOVIE_SERVLET;\n        //alert(JSON.stringify(body))\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n            body: JSON.stringify(body)\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw response;\n                } else {\n                    history.push(\"/my-app\");\n                    window.location.reload(false);\n                }\n            })\n            .catch(error => {\n\n                error.text().then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}\n\nexport function getSingleMovie(id) {\n    return (dispatch) => {\n        const url = BASE + MOVIE_SERVLET + \"/\" + id;\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n        })\n            .then(response => {\n                console.log(\"STATUS \" + response.status)\n                if (!response.ok)\n                    throw response;\n                return response.text();\n            })\n            .then(response => {\n                console.log(response)\n                const result = JSON.parse(response)\n                const msg = result.message;\n                //dispatch(Notifications.error(serverException(msg)));\n                let movie = result.movieList[0];\n                movie.duration=movie.creationDate;// = result.movieList[0];\n\n                dispatch({\n                    type: SET_EDITED_MOVIE,\n                    payload: movie\n                });\n            })\n            .catch(error => {\n                error.text().then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}\n\n\n","import '../../css/table-row.css';\nimport '../../css/app.css';\nimport {FaEdit, FaTrashAlt} from 'react-icons/fa';\nimport {useDispatch} from \"react-redux\";\nimport {deleteMovie} from \"../../actions/movieActions\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction TableRow(props) {\n    const movie = props.movie;\n    const movieId = movie.id;\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    function deleteHandler(id) {\n        dispatch(deleteMovie(id));\n    }\n\n    function editHandler(id) {\n        history.push(\"/my-app/edit/\" + id);\n    }\n\n\n    return (\n        <div className=\"table-row base\">\n            <div className=\"id-div\">{movieId}</div>\n            <div>{movie.name}</div>\n            <div>({movie.coordinates.x} ; {movie.coordinates.y})</div>\n            <div>{movie.creationDate}</div>\n            <div>{movie.oscarsCount}</div>\n            <div>{movie.duration}</div>\n            <div>{movie.genre.toLowerCase()}</div>\n            <div>{movie.mpaaRating}</div>\n            <div>{movie.director === undefined ? \"null\" : movie.director.name}</div>\n            <div className=\"action-div\">\n                <div onClick={() => editHandler(movieId)}>\n                    <FaEdit color=\"#3DC937FF\" className=\"pointer icon\"/>\n                </div>\n                <div onClick={() => deleteHandler(movieId)}>\n                    <FaTrashAlt className=\"pointer icon\" color=\"#EB6767FF\"/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TableRow;\n","import TableRow from \"./TableRow\";\n\nfunction MovieList(props) {\n    const numbers = props.movies;\n    let listItems;\n    if (numbers === undefined) {\n        return (\n            <div className=\"table-row base id-div\">\n                <div className=\"id-div\">No data.</div>\n            </div>\n        );\n    }\n    if (!Array.isArray(numbers)) {\n        //const movie = numbers[0];\n        listItems = <TableRow movie={numbers} key={numbers.id}/>\n    } else {\n        listItems = numbers.map((movie) =>\n            <TableRow movie={movie} key={movie.id}/>\n        );\n    }\n    return (\n        <\n            div> {listItems}\n        </div>\n    );\n}\n\nexport default MovieList;","export const SET_COORDINATES = \"SET_COORDINATES\";\nexport const SET_EDITED_COORDINATES = \"SET_EDITED_COORDINATES\";","import {SET_COORDINATES, SET_EDITED_COORDINATES} from \"../constants/coordinatesActionsConsts\";\nimport {history} from \"../components/App\";\nimport {BASE, COORD_SERVLET} from \"../constants/backendConstants\";\nimport {convert, options, options1} from \"../utils/xmlUtils\";\nimport Notifications from \"react-notification-system-redux\";\nimport {serverException} from \"../notifications/sendNotification\";\n\n\nexport function getSingleCoordinates(id) {\n    return (dispatch) => {\n        const url = BASE + COORD_SERVLET + \"/\" + id;\n        fetch(url, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n        })\n            .then(response => {\n                if (!response.ok)\n                    throw response;\n                return response.text();\n            })\n            .then(response => {\n                console.log(\"response=\"+response);\n\n                const result = JSON.parse(response)\n                const movie = result.coordinatesList[0];\n                dispatch({\n                    type: SET_EDITED_COORDINATES,\n                    payload: movie\n                });\n            })\n            .catch(error => {\n                error.text().then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}\n\nexport function getCoordinates() {\n    return (dispatch) => {\n        const url = BASE + COORD_SERVLET;\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n        })\n            .then(response => {\n                console.log(response.status)\n                if (!response.ok)\n                    throw response;\n                return response.text();\n            })\n            .then(response => {\n                console.log(\"RESPONSE = \" + response);\n                const convert = require('xml-js');\n                const result = JSON.parse(response)\n                const coordinates = result.coordinatesList;\n                console.log(\"COORDINATES = \" + coordinates);\n                dispatch({\n                    type: SET_COORDINATES,\n                    payload: coordinates\n                });\n            })\n            .catch(error => {\n                // error.text().then(errorMessage => {\n                //     const convert = require('xml-js');\n                //     const result = convert.xml2js(errorMessage, options);\n                //     const msg = result.message;\n                //     dispatch(Notifications.error(serverException(msg)));\n                // })\n            });\n    }\n}\n\nfunction transferFormDataToCoordinatesDTO(form) {\n    let result = {};\n    result.id = form.id;\n    result.x = form.x;\n    result.y = form.y;\n    return result;\n}\n\nexport function updateCoordinates(movie, id) {\n    console.log(movie);\n    //let xml = convert.js2xml(transferFormDataToCoordinatesDTO(movie), options1);\n    let body = {\n        coordinatesList : [transferFormDataToCoordinatesDTO(movie)]\n    }\n    console.log(\"XML = \" + body);\n    return (dispatch) => {\n        //alert(JSON.stringify(body))\n        const url = BASE + COORD_SERVLET;\n        fetch(url, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n            body: JSON.stringify(body)\n        })\n            .then(response => {\n                if (!response.ok)\n                    throw response;\n                history.push(\"/my-app/edit/\" + id);\n                window.location.reload(false);\n            })\n            .catch(error => {\n                error.text().then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}\n\nexport function createCoordinates(coordinates, id) {\n    console.log(coordinates);\n    //let xml = convert.js2xml(transferFormDataToCoordinatesDTO(movie), options1);\n    let body = {\n        coordinatesList : [transferFormDataToCoordinatesDTO(coordinates)]\n    }\n    return (dispatch) => {\n        //alert(JSON.stringify(body))\n        const url = BASE + COORD_SERVLET;\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n            body: JSON.stringify(body)\n        })\n            .then(response => {\n                if (!response.ok)\n                    throw response;\n                history.push(\"/my-app/edit/\" + id);\n                window.location.reload(false);\n            })\n            .catch(error => {\n                error.text().then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}","import '../../css/movie-table.css';\nimport AdditionalTasksHeader from \"./AdditionalTasksHeader\";\nimport TableHeader from \"./TableHeader\";\nimport PageFooter from \"./PageFooter\";\nimport {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getMovies} from \"../../actions/movieActions\";\nimport MovieList from \"./MovieList\";\nimport {getCoordinates} from \"../../actions/coordinatesActions\";\n\nfunction MovieTable() {\n    const dispatch = useDispatch();\n    const page = useSelector(state => state.page);\n    const movies = useSelector(state => state.movies.movieList);\n\n\n    useEffect(() => {\n        //dispatch(getMovies(page.perPage, page.currentPage));\n        dispatch(getMovies(page));\n        dispatch(getCoordinates());\n    }, [page.currentPage, page.perPage, page.deleteItem, page.sortBy, page.filters]);\n\n\n    return (\n        <div className=\"movie-table\">\n            {<AdditionalTasksHeader/>}\n            <TableHeader/>\n            <MovieList movies={movies}/>\n            <PageFooter/>\n        </div>\n    );\n}\n\nexport default MovieTable;","import '../../css/table-layout.css';\nimport MovieTable from \"./MovieTable\";\n\nfunction TablePage() {\n    return (\n        <div className=\"table-layout\">\n            <h1>Movie Table</h1>\n            <MovieTable/>\n        </div>\n    );\n}\n\nexport default TablePage;\n","import React from \"react\";\n\nexport const renderedInputField = ({input, label, readonly, type, meta: {touched, error, warning}}) => (\n    <div className=\"input-box\">\n        <div className=\"label\">{label}</div>\n        <input {...input} placeholder={label} type={type} readOnly={readonly}\n               className={touched && error ? \"input-error\" : \"\"}/>\n        {touched && ((error && <span className=\"error\">{error}</span>) || (warning &&\n            <span className=\"error\">{warning}</span>))}\n    </div>\n)","export const rating = [\"PG_13\", \"R\", \"NC_17\"];\nexport const genres = [\"DRAMA\", \"SCIENCE_FICTION\", \"HORROR\"];\nexport const colors = [\"GREEN\", \"RED\", \"YELLOW\", \"ORANGE\"];\nexport const add_genres = [\"DRAMA\", \"TRAGEDY\", \"HORROR\", \"FANTASY\"];","export const required = value => value ? undefined : 'Required';","export const SET_PERSONS = \"SET_PERSONS\";\nexport const SET_EDITED_PERSON = \"SET_EDITED_PERSON\";","import {history} from \"../components/App\";\nimport {BASE, PERSON_SERVLET} from \"../constants/backendConstants\";\nimport {convert, options, options1} from \"../utils/xmlUtils\";\nimport {SET_EDITED_PERSON, SET_PERSONS} from \"../constants/personActionsConsts\";\nimport Notifications from \"react-notification-system-redux\";\nimport {serverException} from \"../notifications/sendNotification\";\n\n\nexport function getSinglePerson(id) {\n    return (dispatch) => {\n        const url = BASE + PERSON_SERVLET + \"/\" + id;\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n        })\n            .then(response => {\n                console.log(\"STATUS \" + response.status);\n                if (!response.ok)\n                    throw response;\n                return response.text();\n            })\n            .then(response => {\n                console.log(response)\n                const result = JSON.parse(response)\n                let movie = result.personsList[0];\n                movie.eyeColor=movie.passportID;\n                //alert(JSON.stringify(movie))\n                dispatch({\n                    type: SET_EDITED_PERSON,\n                    payload: movie\n                });\n            })\n            .catch(error => {\n                error.text().then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}\n\nexport function getPerson() {\n    return (dispatch) => {\n        const url = BASE + PERSON_SERVLET;\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n        })\n            .then(response => {\n                if (!response.ok)\n                    throw response;\n                return response.text();\n            })\n            .then(response => {\n                console.log(response)\n\n                const result = JSON.parse(response)\n                //console.log(\"DDD: \"+JSON.stringify(result.personsList))\n                let coordinates = result.personsList;\n\n                dispatch({\n                    type: SET_PERSONS,\n                    payload: coordinates\n                });\n                //console.log(\"DDD2: \"+JSON.stringify(result.personsList))\n            })\n            .catch(error => {\n                error.text().then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}\n\nfunction transferFormDataToCoordinatesDTO(form) {\n    let result = {};\n    result.id = form.id;\n    result.name = form.name;\n    result.weight = form.weight;\n    result.passportID = form.eyeColor;\n    result.birthday = form.birthday;\n    result.location = {};\n    result.location.id = form.locations;\n    return result;\n}\n\nexport function updatePerson(movie, id) {\n    //let xml = convert.js2xml(transferFormDataToCoordinatesDTO(movie), options1);\n    let body = {\n        personsList : [transferFormDataToCoordinatesDTO(movie)]\n    }\n    console.log(\"XML = \" + body);\n    return (dispatch) => {\n        const url = BASE + PERSON_SERVLET;\n        //alert(JSON.stringify(body))\n        fetch(url, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n            body: JSON.stringify(body)\n        })\n            .then(response => {\n                if (!response.ok)\n                    throw response;\n                history.push(\"/my-app/edit/\" + id);\n                window.location.reload(false);\n            })\n            .catch(error => {\n                error.text().then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}\n\nexport function createPerson(coordinates, id) {\n    let body = {\n        personsList : [transferFormDataToCoordinatesDTO(coordinates)]\n    }\n    console.log(\"XML = \" + body);\n    return (dispatch) => {\n        const url = BASE + PERSON_SERVLET;\n        //alert(JSON.stringify(body))\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n            body: JSON.stringify(body)\n        })\n            .then(response => {\n                if (!response.ok)\n                    throw response;\n                history.push(\"/my-app/edit/\" + id);\n                window.location.reload(false);\n            })\n            .catch(error => {\n                error.text().then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}","import React, {useEffect} from 'react'\nimport {Field, reduxForm} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/edit-form.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getSingleMovie} from \"../../actions/movieActions\";\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\nimport {genres, rating} from \"../../constants/enumConstants\";\nimport {required} from \"../../validators/required\";\nimport {getCoordinates} from \"../../actions/coordinatesActions\";\nimport {useHistory} from \"react-router-dom\";\nimport {getPerson} from \"../../actions/personsActions\";\n\nconst MovieEditForm = (props) => {\n    const {handleSubmit, pristine, reset, submitting, id} = props\n    const dispatch = useDispatch();\n    const movieId = useSelector(state => state.movies.editedMovie.id);\n    const name = useSelector(state => state.movies.editedMovie.name);\n    const oscarsCount = useSelector(state => state.movies.editedMovie.oscarsCount);\n    const duration = useSelector(state => state.movies.editedMovie.duration);\n    const creationDate = useSelector(state => state.movies.editedMovie.creationDate);\n    const genre = useSelector(state => state.movies.editedMovie.genre);\n    const mpaaRating = useSelector(state => state.movies.editedMovie.mpaaRating);\n    const coordinates = useSelector(state => state.movies.editedMovie.coordinates);\n    //const coordinatesId = useSelector(state => state.movies.editedMovie.coordinates.id);\n    const screenwriter = useSelector(state => state.movies.editedMovie.screenWriter);\n    const director = useSelector(state => state.movies.editedMovie.director);\n    // const location = useSelector(state => state.movies.editedMovie.screenWriter.location);\n    const coordinatesList = useSelector(state => state.coordinates.coordinatesList);\n    const locationList = useSelector(state => state.location.locationsList);\n    const personList = useSelector(state => state.person.personsList);\n    const history = useHistory();\n    //const selectedCoordinates = useSelector(state => state.form.edit-movie-form.values.coordinates)\n\n    useEffect(() => {\n        dispatch(getSingleMovie(id));\n        dispatch(getCoordinates());\n        //dispatch(getLocations());\n        dispatch(getPerson());\n    }, []);\n\n    function handleEditCoordSubmit(evt) {\n        evt.preventDefault();\n        let element = document.getElementById(\"coordinates\");\n        history.push(\"/my-app/coordinates/edit/\" + element.value);\n    }\n\n    function handleCreateCoordSubmit(evt) {\n        evt.preventDefault();\n        history.push(\"/my-app/coordinates/new\");\n    }\n\n    function handleEditPersonSubmit(evt) {\n        evt.preventDefault();\n        let element = document.getElementById(\"screenwriter\");\n        history.push(\"/my-app/person/edit/\" + element.value);\n    }\n\n    function handleCreatePersonSubmit(evt) {\n        evt.preventDefault();\n        history.push(\"/my-app/person/new\");\n    }\n\n\n    useEffect(() => {\n        props.reset();\n        props.initialize({\n            name: name,\n            id: movieId,\n            oscarsCount: oscarsCount,\n            duration: duration,\n            //creationDate: creationDate,\n            genre: genre,\n            mpaaRating: mpaaRating,\n            coordinates: coordinates.id,\n            screenwriter: director.id,\n            director: director.id,\n        });\n    }, [id, name, oscarsCount, duration, genre, mpaaRating, coordinates, screenwriter])\n\n    return (\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\n            <div className={\"movie-form\"}>\n                <h3>Movie</h3>\n                <Field name=\"name\" type=\"text\"\n                       component={renderedInputField} label=\"Name\"\n                    /* validate={[required]}*/\n                />\n                <Field name=\"oscarsCount\" type=\"number\"\n                       component={renderedInputField} label=\"Oscars\"\n                    /*  validate={[required]}*/\n                />\n                <Field name=\"duration\" type=\"text\"\n                       component={renderedInputField} label=\"Creation date\"\n                       //readonly=\"readonly\"\n                    /* validate={[required]}*/\n                />\n                <div className=\"label\">Genre</div>\n                <Field name=\"genre\"\n                       component=\"select\" label=\"Genre\">\n                    {genres.map(o => <option key={o} value={o} selected={genre === o}>{o} </option>)}\n                </Field>\n                <div className=\"label\">Rating</div>\n                <Field name=\"mpaaRating\"\n                       component=\"select\" label=\"Rating\" validate={[required]}>\n                    {rating.map(o => <option key={o} value={o} selected={genre === o}>{o} </option>)}\n                </Field>\n                <div>\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\n                </div>\n            </div>\n\n            <div className={\"movie-form\"}>\n                <h3>Coordinates</h3>\n                <div className=\"label\">(X , Y)</div>\n                <Field name=\"coordinates\" id=\"coordinates\"\n                       component=\"select\" label=\"Coordinates\">\n                    {coordinatesList.map(o => <option key={o.id} value={o.id}>({o.x} , {o.y}) </option>)}\n                </Field>\n                <div className={\"buttons-div\"}>\n                    <div>\n                        <button id={\"edit-form-but\"} onClick={handleEditCoordSubmit}>Edit</button>\n                    </div>\n                    <div>\n                        <button id={\"edit-form-but\"} onClick={handleCreateCoordSubmit}>Create</button>\n                    </div>\n                </div>\n\n            </div>\n\n            <div className={\"movie-form\"}>\n                <h3>Director</h3>\n                <div className=\"label\">Director's name</div>\n                <Field name=\"screenwriter\" id=\"screenwriter\"\n                       component=\"select\">\n                    {personList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\n                </Field>\n                <div className={\"buttons-div\"}>\n                    <div>\n                        <button id={\"edit-form-but\"} onClick={handleEditPersonSubmit}>Edit</button>\n                    </div>\n                    <div>\n                        <button id={\"edit-form-but\"} onClick={handleCreatePersonSubmit}>Create</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'edit-movie-form',\n    keepDirtyOnReinitialize: true\n})(MovieEditForm)","import '../../css/table-layout.css';\nimport MovieEditForm from \"../editForms/MovieEditForm\";\nimport {useParams} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {updateMovie} from \"../../actions/movieActions\";\n\n\nfunction MovieEditPage() {\n    const {id} = useParams();\n    const dispatch = useDispatch();\n\n\n    const onSubmit = (formData) => {\n        dispatch(updateMovie(formData));\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <h2>Edit Movie (ID: {id})</h2>\n            <hr/>\n            <MovieEditForm id={id} onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default MovieEditPage;\n","import React, {useEffect} from 'react'\nimport {Field, reduxForm} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/edit-form.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\nimport {genres, rating} from \"../../constants/enumConstants\";\nimport {getCoordinates} from \"../../actions/coordinatesActions\";\nimport {getPerson} from \"../../actions/personsActions\";\n\nconst CreateMovieForm = (props) => {\n    const {handleSubmit, pristine, reset, submitting, id} = props\n    const dispatch = useDispatch();\n    const genre = useSelector(state => state.movies.editedMovie.genre);\n    const debug = useSelector(state => state);\n    const coordinatesList = useSelector(state => state.coordinates.coordinatesList);\n\n\n    const personList = useSelector(state => state.person.personsList);\n\n\n    useEffect(() => {\n        dispatch(getCoordinates());\n        dispatch(getPerson());\n    }, []);\n\n    useEffect(() => {\n        props.reset();\n        console.log(\"DEBUG = \"+JSON.stringify(debug))\n        //alert(debug)\n        //alert(JSON.stringify(coordinatesList))\n        props.initialize({\n            genre: genres[0],\n            mpaaRating: rating[0],\n            coordinates: coordinatesList[0].id,\n            screenwriter: personList[0].id\n        });\n    }, [coordinatesList, personList])\n\n    return (\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\n            <div className={\"movie-form\"}>\n                <h3>Movie</h3>\n                <Field name=\"name\" type=\"text\"\n                       component={renderedInputField} label=\"Name\"\n                    /* validate={[required]}*/\n                />\n                <Field name=\"oscarsCount\" type=\"number\"\n                       component={renderedInputField} label=\"Oscars\"\n                    /* validate={[required]}*/\n                />\n                <Field name=\"duration\" type=\"text\"\n                       component={renderedInputField} label=\"Creation date\"\n                    /*validate={[required]}*/\n                />\n                <div className=\"label\">Genre</div>\n                <Field name=\"genre\"\n                       component=\"select\" label=\"Genre\">\n                    {genres.map(o => <option key={o} value={o} selected={genre === o}>{o} </option>)}\n                </Field>\n                <div className=\"label\">Rating</div>\n                <Field name=\"mpaaRating\"\n                       component=\"select\" label=\"Rating\">\n                    {rating.map(o => <option key={o} value={o} selected={genre === o}>{o} </option>)}\n                </Field>\n                <div>\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\n                </div>\n            </div>\n\n            <div className={\"movie-form\"}>\n                <h3>Coordinates</h3>\n                <div className=\"label\">(X , Y)</div>\n                <Field name=\"coordinates\" id=\"coordinates\"\n                       component=\"select\" label=\"Coordinates\">\n                    {coordinatesList.map(o => <option key={o.id} value={o.id}>({o.x} , {o.y}) </option>)}\n                </Field>\n            </div>\n\n            <div className={\"movie-form\"}>\n                <h3>Director</h3>\n                <div className=\"label\">Director's name</div>\n                <Field name=\"screenwriter\" id=\"screenwriter\"\n                       component=\"select\">\n                    {personList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\n                </Field>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'create-movie-form',\n})(CreateMovieForm)","import '../../css/table-layout.css';\nimport {useDispatch} from \"react-redux\";\nimport {createMovie} from \"../../actions/movieActions\";\nimport CreateMovieForm from \"../createForms/CreateMovieForm\";\n\n\nfunction CreateMoviePage() {\n    /*const history = useHistory();*/\n    const dispatch = useDispatch();\n\n    const onSubmit = (formData) => {\n        dispatch(createMovie(formData));\n        /* history.push('/');*/\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <h1>Create Movie</h1>\n            <CreateMovieForm onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default CreateMoviePage;\n","import React from 'react'\nimport {Field, reduxForm, reset} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/filter.css';\n\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\n    <div className=\"number-box\">\n        <input {...input} type={type}\n               className={touched && error ? \"input-error\" : \"\"}/>\n    </div>\n)\n\nconst required = value => value ? undefined : 'Required'\n\nconst afterSubmit = (result, dispatch) =>\n    dispatch(reset('id-filter-form'));\n\n\nconst IdFilterForm = (props) => {\n    const {handleSubmit, submitting} = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <h3>Select movies with id in range</h3>\n            <div className=\"range-container\">\n                <Field name=\"from\" type=\"text\"\n                       component={numberField} label=\"from\"\n                       validate={[required]}\n                />\n                <div> —</div>\n                <Field name=\"to\" type=\"text\"\n                       component={numberField} label=\"to\"\n                       validate={[required]}\n                />\n            </div>\n            <div>\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'id-filter-form',\n    onSubmitSuccess: afterSubmit,\n})(IdFilterForm)","import '../../css/table-layout.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport IdFilterForm from \"../filterForms/IdFilterForm\";\n\n\nfunction IdFilterPage() {\n    const dispatch = useDispatch();\n    const filters = useSelector(state => state.page.filters);\n\n    const onSubmit = (formData) => {\n        let element = document.getElementById(\"filter-id\");\n        for (const filter of filters) {\n            if (filter.name === \"id\") {\n                dispatch({\n                    type: 'REMOVE_FILTER',\n                    payload: \"id\"\n                });\n            }\n        }\n        let filter = {};\n        filter.name = \"id\";\n        filter.from = formData.from;\n        filter.to = formData.to;\n        dispatch({\n            type: 'SET_FILTER',\n            payload: filter\n        });\n        element.style.color = \"rgb(255,255,255)\";\n        dispatch({\n            type: 'SHOW_MODAL',\n            payload: false\n        });\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <IdFilterForm onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default IdFilterPage;\n","import React from 'react'\nimport {Field, reduxForm, reset} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/filter.css';\n\nconst textField = ({input, type, meta: {touched, error, warning}}) => (\n    <div className=\"text-box\">\n        <input {...input} type={type}\n               className={touched && error ? \"input-error\" : \"\"}/>\n    </div>\n)\n\nconst required = value => value ? undefined : 'Required'\n\nconst afterSubmit = (result, dispatch) =>\n    dispatch(reset('name-filter-form'));\n\n\nconst NameFilterForm = (props) => {\n    const {handleSubmit, submitting} = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <h3>Select movies with title like</h3>\n            <div className=\"text-box-container\">\n                <Field name=\"like\" type=\"text\"\n                       component={textField} label=\"from\"\n                       validate={[required]}\n                />\n            </div>\n            <div>\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'name-filter-form',\n    onSubmitSuccess: afterSubmit,\n})(NameFilterForm)","import '../../css/table-layout.css';\nimport {useDispatch} from \"react-redux\";\nimport NameFilterForm from \"../filterForms/NameFilterForm\";\nimport {SET_FILTER, SHOW_MODAL} from \"../../constants/pageActionsConsts\";\n\n\nfunction NameFilterPage() {\n    const dispatch = useDispatch();\n\n    const onSubmit = (formData) => {\n        let element = document.getElementById(\"filter-name\");\n        let filter = {};\n        filter.name = \"name\";\n        filter.like = formData.like;\n        dispatch({\n            type: SET_FILTER,\n            payload: filter\n        });\n        element.style.color = \"rgb(255,255,255)\";\n        dispatch({\n            type: SHOW_MODAL,\n            payload: false\n        });\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <NameFilterForm onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default NameFilterPage;\n","import React from 'react'\nimport {Field, reduxForm, reset} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/filter.css';\n\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\n    <div className=\"number-box\">\n        <input {...input} type={type}\n               className={touched && error ? \"input-error\" : \"\"}/>\n    </div>\n)\n\nconst required = value => value ? undefined : 'Required'\n\nconst afterSubmit = (result, dispatch) =>\n    dispatch(reset('coordinate-filter-form'));\n\n\nconst CoordinateFilterForm = (props) => {\n    const {handleSubmit, submitting} = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <h3>Select movies with x in range</h3>\n            <div className=\"range-container\">\n                <Field name=\"xfrom\" type=\"text\"\n                       component={numberField} label=\"from\"\n                       validate={[required]}\n                />\n                <div> —</div>\n                <Field name=\"xto\" type=\"text\"\n                       component={numberField} label=\"to\"\n                       validate={[required]}\n                />\n            </div>\n            <h3>Select movies with y in range</h3>\n            <div className=\"range-container\">\n                <Field name=\"yfrom\" type=\"text\"\n                       component={numberField} label=\"from\"\n                       validate={[required]}\n                />\n                <div> —</div>\n                <Field name=\"yto\" type=\"text\"\n                       component={numberField} label=\"to\"\n                       validate={[required]}\n                />\n            </div>\n            <div>\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'coordinate-filter-form',\n    onSubmitSuccess: afterSubmit,\n})(CoordinateFilterForm)","import '../../css/table-layout.css';\nimport {useDispatch} from \"react-redux\";\nimport CoordinateFilterForm from \"../filterForms/CoordinateFilterForm\";\nimport {COORDINATE} from \"../../constants/filterConstants\";\n\n\nfunction CoordinateFilterPage() {\n    const dispatch = useDispatch();\n\n    const onSubmit = (formData) => {\n        let element = document.getElementById(\"filter-coordinate\");\n        let filter = {};\n        filter.name = COORDINATE;\n        filter.xfrom = formData.xfrom;\n        filter.xto = formData.xto;\n        filter.yfrom = formData.yfrom;\n        filter.yto = formData.yto;\n        dispatch({\n            type: 'SET_FILTER',\n            payload: filter\n        });\n        element.style.color = \"rgb(255,255,255)\";\n        dispatch({\n            type: 'SHOW_MODAL',\n            payload: false\n        });\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <CoordinateFilterForm onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default CoordinateFilterPage;\n","import React from 'react'\nimport {Field, reduxForm, reset} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/filter.css';\nimport moment from 'moment';\n\nconst dateField = ({input, label, type, onKeyDown, meta: {touched, error, warning}}) => (\n    <div className=\"date-box\">\n        <input {...input} placeholder={label} type={type} onKeyDown={onKeyDown}\n               className={touched && error ? \"input-error\" : \"\"}/>\n        {touched && ((error && <span className=\"error\">{error}</span>) || (warning &&\n            <span className=\"error\">{warning}</span>))}\n    </div>\n)\n\nconst required = value => value ? undefined : 'Required'\n\nconst validDate = value => {\n    if (moment(value, 'DD/MM/YYYY', true).isValid())\n        return undefined;\n    else\n        return \"Date is incorrect\";\n}\n\nconst afterSubmit = (result, dispatch) =>\n    dispatch(reset('id-filter-form'));\n\nconst onKeyDown = (ev) => {\n    var keycode;\n    if (window.event)\n        keycode = window.event.keyCode;\n    else if (ev)\n        keycode = ev.which;\n    let ipLength = ev.target.value.length;\n    if (keycode !== 8) {\n        if (ipLength === 2 || ipLength === 5) {\n            ev.target.value += '/';\n        }\n    }\n};\n\n\nconst IdFilterForm = (props) => {\n    const {handleSubmit, submitting} = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <h3>Select movies with date in range</h3>\n            <div className=\"date-range-container\">\n                <Field name=\"from\" type=\"text\"\n                       component={dateField} label=\"DD/MM/YYYY\"\n                       onKeyDown={onKeyDown}\n                       validate={[required, validDate]}\n                />\n                <div id=\"date-dash\"> —</div>\n                <Field name=\"to\" type=\"text\"\n                       component={dateField} label=\"DD/MM/YYYY\"\n                       onKeyDown={onKeyDown}\n                       validate={[required, validDate]}\n                />\n            </div>\n            <div>\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\n            </div>\n        </form>\n    )\n}\n\n\nexport default reduxForm({\n    form: 'id-filter-form',\n    onSubmitSuccess: afterSubmit,\n})(IdFilterForm)","import '../../css/table-layout.css';\nimport {useDispatch} from \"react-redux\";\nimport {DATE} from \"../../constants/filterConstants\";\nimport DateFilterForm from \"../filterForms/DateFilterForm\";\n\n\nfunction DateFilterPage() {\n    const dispatch = useDispatch();\n\n    const onSubmit = (formData) => {\n        let element = document.getElementById(\"filter-date\");\n        let filter = {};\n        filter.name = DATE;\n        filter.from = formData.from;\n        filter.to = formData.to;\n        dispatch({\n            type: 'SET_FILTER',\n            payload: filter\n        });\n        element.style.color = \"rgb(255,255,255)\";\n        dispatch({\n            type: 'SHOW_MODAL',\n            payload: false\n        });\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <DateFilterForm onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default DateFilterPage;\n","import React from 'react'\nimport {Field, reduxForm, reset} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/filter.css';\n\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\n    <div className=\"number-box\">\n        <input {...input} type={type}\n               className={touched && error ? \"input-error\" : \"\"}/>\n    </div>\n)\n\nconst required = value => value ? undefined : 'Required'\n\nconst afterSubmit = (result, dispatch) =>\n    dispatch(reset('oscar-filter-form'));\n\n\nconst OscarFilterForm = (props) => {\n    const {handleSubmit, submitting} = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <h3>Select movies with oscars in range</h3>\n            <div className=\"range-container\">\n                <Field name=\"from\" type=\"text\"\n                       component={numberField} label=\"from\"\n                       validate={[required]}\n                />\n                <div> —</div>\n                <Field name=\"to\" type=\"text\"\n                       component={numberField} label=\"to\"\n                       validate={[required]}\n                />\n            </div>\n            <div>\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'oscar-filter-form',\n    onSubmitSuccess: afterSubmit,\n})(OscarFilterForm)","import '../../css/table-layout.css';\nimport {useDispatch} from \"react-redux\";\nimport OscarFilterForm from \"../filterForms/OscarFilterForm\";\nimport {OSCAR} from \"../../constants/filterConstants\";\n\n\nfunction OscarFilterPage() {\n    const dispatch = useDispatch();\n\n    const onSubmit = (formData) => {\n        let element = document.getElementById(\"filter-oscar\");\n        let filter = {};\n        filter.name = OSCAR;\n        filter.from = formData.from;\n        filter.to = formData.to;\n        dispatch({\n            type: 'SET_FILTER',\n            payload: filter\n        });\n        element.style.color = \"rgb(255,255,255)\";\n        dispatch({\n            type: 'SHOW_MODAL',\n            payload: false\n        });\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <OscarFilterForm onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default OscarFilterPage;\n","import React from 'react'\nimport {Field, reduxForm, reset} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/filter.css';\n\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\n    <div className=\"number-box\">\n        <input {...input} type={type}\n               className={touched && error ? \"input-error\" : \"\"}/>\n    </div>\n)\n\nconst required = value => value ? undefined : 'Required'\n\nconst afterSubmit = (result, dispatch) =>\n    dispatch(reset('duration-filter-form'));\n\n\nconst DurationFilterForm = (props) => {\n    const {handleSubmit, submitting} = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <h3>Select movies with duration (min) in range</h3>\n            <div className=\"range-container\">\n                <Field name=\"from\" type=\"text\"\n                       component={numberField} label=\"from\"\n                       validate={[required]}\n                />\n                <div> —</div>\n                <Field name=\"to\" type=\"text\"\n                       component={numberField} label=\"to\"\n                       validate={[required]}\n                />\n            </div>\n            <div>\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'duration-filter-form',\n    onSubmitSuccess: afterSubmit,\n})(DurationFilterForm)","import '../../css/table-layout.css';\nimport {useDispatch} from \"react-redux\";\nimport {DURATION} from \"../../constants/filterConstants\";\nimport DurationFilterForm from \"../filterForms/DurationFilterForm\";\n\n\nfunction DurationFilterPage() {\n    const dispatch = useDispatch();\n\n    const onSubmit = (formData) => {\n        let element = document.getElementById(\"filter-duration\");\n        let filter = {};\n        filter.name = DURATION;\n        filter.from = formData.from;\n        filter.to = formData.to;\n        dispatch({\n            type: 'SET_FILTER',\n            payload: filter\n        });\n        element.style.color = \"rgb(255,255,255)\";\n        dispatch({\n            type: 'SHOW_MODAL',\n            payload: false\n        });\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <DurationFilterForm onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default DurationFilterPage;\n","import React from 'react'\nimport {Field, reduxForm, reset} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/filter.css';\n\nconst afterSubmit = (result, dispatch) =>\n    dispatch(reset('genre-filter-form'));\n\nconst validateRadioGroupIsNotEmpty = values => {\n    let errors = {};\n    if (!values.compare) {\n        errors.compare = 'Required';\n    }\n    return errors;\n};\n\nconst GenreFilterForm = (props) => {\n    const {handleSubmit, submitting} = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <h3>Select movies with genre</h3>\n            <div className=\"radio-group\">\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"DRAMA\"/>Drama</label>\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"TRAGEDY\"/>Tragedy</label>\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"HORROR\"/>Horror</label>\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"FANTASY\"/>Fantasy</label>\n            </div>\n            <div>\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'genre-filter-form',\n    onSubmitSuccess: afterSubmit,\n    validate: validateRadioGroupIsNotEmpty\n})(GenreFilterForm)","import '../../css/table-layout.css';\nimport {useDispatch} from \"react-redux\";\nimport {GENRE} from \"../../constants/filterConstants\";\nimport GenreFilterForm from \"../filterForms/GenreFilterForm\";\n\n\nfunction GenreFilterPage() {\n    const dispatch = useDispatch();\n\n    const onSubmit = (formData) => {\n        let element = document.getElementById(\"filter-genre\");\n        let filter = {};\n        filter.name = GENRE;\n        filter.like = formData.compare;\n        dispatch({\n            type: 'SET_FILTER',\n            payload: filter\n        });\n        element.style.color = \"rgb(255,255,255)\";\n        dispatch({\n            type: 'SHOW_MODAL',\n            payload: false\n        });\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <GenreFilterForm onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default GenreFilterPage;\n","import React from 'react'\nimport {Field, reduxForm, reset} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/filter.css';\n\nconst afterSubmit = (result, dispatch) =>\n    dispatch(reset('rating-filter-form'));\n\nconst validateRadioGroupIsNotEmpty = values => {\n    let errors = {};\n    if (!values.compare) {\n        errors.compare = 'Required';\n    }\n    return errors;\n};\n\nconst RatingFilterForm = (props) => {\n    const {handleSubmit, submitting} = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <h3>Select movies with rating</h3>\n            <div className=\"radio-group\">\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"G\"/>G</label>\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"PG\"/>PG</label>\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"PG_13\"/>PG_13</label>\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"R\"/>R</label>\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"NC_17\"/>NC_17</label>\n                {props.errors && <span className=\"error\">{props.errors}</span>}\n            </div>\n            <div>\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'rating-filter-form',\n    onSubmitSuccess: afterSubmit,\n    validateRadioGroupIsNotEmpty\n})(RatingFilterForm)","import '../../css/table-layout.css';\nimport {useDispatch} from \"react-redux\";\nimport {RATING} from \"../../constants/filterConstants\";\nimport RatingFilterForm from \"../filterForms/RatingFilterForm\";\n\n\nfunction RatingFilterPage() {\n    const dispatch = useDispatch();\n\n    const onSubmit = (formData) => {\n        let element = document.getElementById(\"filter-rating\");\n        let filter = {};\n        filter.name = RATING;\n        filter.like = formData.compare;\n        dispatch({\n            type: 'SET_FILTER',\n            payload: filter\n        });\n        element.style.color = \"rgb(255,255,255)\";\n        dispatch({\n            type: 'SHOW_MODAL',\n            payload: false\n        });\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <RatingFilterForm onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default RatingFilterPage;\n","import React from 'react'\nimport {Field, reduxForm, reset} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/filter.css';\n\nconst textField = ({input, type, meta: {touched, error, warning}}) => (\n    <div className=\"text-box\">\n        <input {...input} type={type}\n               className={touched && error ? \"input-error\" : \"\"}/>\n    </div>\n)\n\nconst required = value => value ? undefined : 'Required'\n\nconst afterSubmit = (result, dispatch) =>\n    dispatch(reset('screenWriter-filter-form'));\n\n\nconst ScreenWriterFilterForm = (props) => {\n    const {handleSubmit, submitting} = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <h3>Select movies with screenwriter name like</h3>\n            <div className=\"text-box-container\">\n                <Field name=\"like\" type=\"text\"\n                       component={textField} label=\"from\"\n                       validate={[required]}\n                />\n            </div>\n            <div>\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'screenWriter-filter-form',\n    onSubmitSuccess: afterSubmit,\n})(ScreenWriterFilterForm)","import '../../css/table-layout.css';\nimport {useDispatch} from \"react-redux\";\nimport ScreenWriterFilterForm from \"../filterForms/ScreenWriterFilterForm\";\nimport {WRITER} from \"../../constants/filterConstants\";\n\n\nfunction ScreenWriterFilterPage() {\n    const dispatch = useDispatch();\n\n    const onSubmit = (formData) => {\n        let element = document.getElementById(\"filter-screenWriter\");\n        let filter = {};\n        filter.name = WRITER;\n        filter.like = formData.like;\n        dispatch({\n            type: 'SET_FILTER',\n            payload: filter\n        });\n        element.style.color = \"rgb(255,255,255)\";\n        dispatch({\n            type: 'SHOW_MODAL',\n            payload: false\n        });\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <ScreenWriterFilterForm onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default ScreenWriterFilterPage;\n","import React from \"react\";\nimport \"../../css/modal.css\";\n\nconst Modal = ({active, setActive, children}) => {\n    return (\n        <div className={active ? \"modal active\" : \"modal\"}\n             onClick={() => setActive(false)}>\n            <div className={active ? \"modal-content active\" : \"modal-content\"}\n                 onClick={e => e.stopPropagation()}>\n                {children}\n            </div>\n        </div>\n    );\n};\nexport default Modal;\n","import React, {useEffect} from 'react'\nimport {Field, reduxForm} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/edit-form.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\nimport {getSingleCoordinates} from \"../../actions/coordinatesActions\";\n\nconst EditCoordinatesForm = (props) => {\n    const {handleSubmit, pristine, reset, submitting, id} = props\n    const dispatch = useDispatch();\n    const coordinates = useSelector(state => state.coordinates.editedCoordinates);\n\n    useEffect(() => {\n        //dispatch(getSingleMovie(id));\n        dispatch(getSingleCoordinates(id));\n    }, []);\n\n    useEffect(() => {\n        props.reset();\n        props.initialize({\n            id: coordinates.id,\n            x: coordinates.x,\n            y: coordinates.y\n        });\n    }, [coordinates])\n\n    return (\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\n            <div className={\"movie-form\"}>\n                <h3>Coordinates</h3>\n\n                <Field name=\"x\" type=\"number\"\n                       component={renderedInputField} label=\"X\"\n                    /* validate={[required]}*/\n                />\n                <Field name=\"y\" type=\"number\"\n                       component={renderedInputField} label=\"Y\"\n                    /*validate={[required]}*/\n                />\n                <div>\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\n                </div>\n            </div>\n\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'edit-coordinates-form',\n    keepDirtyOnReinitialize: true\n})(EditCoordinatesForm)","import '../../css/table-layout.css';\nimport {useParams} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {updateCoordinates} from \"../../actions/coordinatesActions\";\nimport EditCoordinatesForm from \"../editForms/EditCoordinatesForm\";\n\n\nfunction EditCoordinatesPage() {\n    const {id} = useParams();\n    const dispatch = useDispatch();\n    const movieId = useSelector(state => state.movies.editedMovie.id);\n\n    const onSubmit = (formData) => {\n        dispatch(updateCoordinates(formData, movieId));\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <h2>Edit Coordinates (ID: {id})</h2>\n            <hr/>\n            <EditCoordinatesForm id={id} onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default EditCoordinatesPage;\n","import React from 'react'\nimport {Field, reduxForm} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/edit-form.css';\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\n\nconst CreateCoordinatesForm = (props) => {\n    const {handleSubmit, pristine, reset, submitting, id} = props\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className={\"movie-form\"}>\n                <h3>Coordinates</h3>\n                <Field name=\"x\" type=\"number\"\n                       component={renderedInputField} label=\"X\"\n                    /*validate={[required]}*/\n                />\n                <Field name=\"y\" type=\"number\"\n                       component={renderedInputField} label=\"Y\"\n                    /*  validate={[required]}*/\n                />\n                <div>\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\n                </div>\n            </div>\n\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'create-coordinates-form',\n    keepDirtyOnReinitialize: true\n})(CreateCoordinatesForm)","import '../../css/table-layout.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {createCoordinates} from \"../../actions/coordinatesActions\";\nimport CreateCoordinatesForm from \"../createForms/CreateCoordinatesForm\";\n\n\nfunction CreateCoordinatesPage() {\n\n    const dispatch = useDispatch();\n    const movieId = useSelector(state => state.movies.editedMovie.id);\n\n    const onSubmit = (formData) => {\n        dispatch(createCoordinates(formData, movieId));\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <h2>Create Coordinates</h2>\n            <hr/>\n            <CreateCoordinatesForm onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default CreateCoordinatesPage;\n","export const SET_LOCATIONS = \"SET_LOCATIONS\"\nexport const SET_EDITED_LOCATION = \"SET_EDITED_LOCATION\"","import {history} from \"../components/App\";\nimport {BASE, LOCATION_SERVLET} from \"../constants/backendConstants\";\nimport {convert, options, options1} from \"../utils/xmlUtils\";\nimport {SET_EDITED_LOCATION, SET_LOCATIONS} from \"../constants/locationActionsConsts\";\nimport Notifications from \"react-notification-system-redux\";\nimport {serverException} from \"../notifications/sendNotification\";\n\n\nexport function getSingleLocation(id) {\n    return (dispatch) => {\n        const url = BASE + LOCATION_SERVLET + \"/\" + id;\n        fetch(url, {\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n        })\n            .then(response => {\n                if (!response.ok)\n                    throw response;\n                return response.text();\n            })\n            .then(response => {\n                console.log(response);\n                const result = JSON.parse(response)\n                const movie = result.locationsList[0];\n                dispatch({\n                    type: SET_EDITED_LOCATION,\n                    payload: movie\n                });\n            })\n            .catch(error => {\n                error.text().then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}\n\nexport function getLocations() {\n    return (dispatch) => {\n        const url = BASE + LOCATION_SERVLET;\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n        })\n            .then(response => {\n                if (!response.ok)\n                    throw response;\n                return response.text();\n            })\n            .then(response => {\n                console.log(\"RESPONSE = \" + response);\n                const convert = require('xml-js');\n                const result = JSON.parse(response)\n                const locations = result.locationsList;\n                dispatch({\n                    type: SET_LOCATIONS,\n                    payload: locations\n                });\n            })\n            .catch(error => {\n                error.text().then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}\n\n\nfunction transferFormDataToCoordinatesDTO(form) {\n    let result = {};\n    result.id = form.id;\n    result.x = form.x;\n    result.y = form.y;\n    result.name = form.name;\n    return result;\n}\n\nexport function updateLocation(movie, id) {\n\n    console.log(movie);\n    //let xml = convert.js2xml(transferFormDataToCoordinatesDTO(movie), options1);\n    let body = {\n        locationsList : [transferFormDataToCoordinatesDTO(movie)]\n    }\n    console.log(\"XML = \" + body);\n    //alert(JSON.stringify(body))\n    return (dispatch) => {\n        const url = BASE + LOCATION_SERVLET;\n        fetch(url, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n            body: JSON.stringify(body)\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw response;\n                } else return response.text();\n            })\n            .then(response => {\n                history.goBack();\n            })\n            .catch(error => {\n                error.text().then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}\n\nexport function createLocation(coordinates, id) {\n    let body = {\n        locationsList : [transferFormDataToCoordinatesDTO(coordinates)]\n    }\n    console.log(\"XML = \" + body);\n    return (dispatch) => {\n        //alert(JSON.stringify(body))\n        const url = BASE + LOCATION_SERVLET;\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n            body: JSON.stringify(body)\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw response;\n                } else return response.text();\n            })\n            .then(response => {\n                history.push(\"/my-app/edit/\" + id);\n                window.location.reload(false);\n            })\n            .catch(error => {\n                error.text().then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}\n\n","import React, {useEffect} from 'react'\nimport {Field, reduxForm} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/edit-form.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\nimport {getSingleLocation} from \"../../actions/locationsActions\";\n\nconst LocationEditForm = (props) => {\n    const {handleSubmit, pristine, reset, submitting, id} = props\n    const dispatch = useDispatch();\n    const location = useSelector(state => state.location.editedLocation);\n\n    useEffect(() => {\n        dispatch(getSingleLocation(id));\n    }, []);\n\n    useEffect(() => {\n        props.reset();\n        props.initialize({\n            id: location.id,\n            x: location.x,\n            y: location.y,\n            name: location.name\n        });\n    }, [location])\n\n    return (\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\n            <div className={\"movie-form\"}>\n                <h3>Location</h3>\n                <Field name=\"name\" type=\"text\"\n                       component={renderedInputField} label=\"Name of location\"\n                />\n                <Field name=\"x\" type=\"number\"\n                       component={renderedInputField} label=\"X\"\n                />\n                <Field name=\"y\" type=\"number\"\n                       component={renderedInputField} label=\"Y\"\n                />\n                <div>\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\n                </div>\n            </div>\n\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'edit-location-form',\n    keepDirtyOnReinitialize: true\n})(LocationEditForm)","import '../../css/table-layout.css';\nimport {useParams} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {updateLocation} from \"../../actions/locationsActions\";\nimport LocationEditForm from \"../editForms/LocationEditForm\";\n\n\nfunction EditCoordinatesPage() {\n    const {id} = useParams();\n    const dispatch = useDispatch();\n    const movieId = useSelector(state => state.movies.editedMovie.id);\n\n    const onSubmit = (formData) => {\n        dispatch(updateLocation(formData, movieId));\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <h2>Edit Location (ID: {id})</h2>\n            <hr/>\n            <LocationEditForm id={id} onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default EditCoordinatesPage;\n","import React from 'react'\nimport {Field, reduxForm} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/edit-form.css';\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\n\nconst LocationCreateForm = (props) => {\n    const {handleSubmit, pristine, reset, submitting, id} = props\n\n\n    return (\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\n            <div className={\"movie-form\"}>\n                <h3>Location</h3>\n                <Field name=\"name\" type=\"text\"\n                       component={renderedInputField} label=\"Name of location\"\n                />\n                <Field name=\"x\" type=\"number\"\n                       component={renderedInputField} label=\"X\"\n                />\n                <Field name=\"y\" type=\"number\"\n                       component={renderedInputField} label=\"Y\"\n                />\n                <div>\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\n                </div>\n            </div>\n\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'create-location-form',\n})(LocationCreateForm)","import '../../css/table-layout.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {createLocation} from \"../../actions/locationsActions\";\nimport LocationCreateForm from \"../createForms/CreateLocationForm\";\n\n\nfunction CreateLocationPage() {\n\n    const dispatch = useDispatch();\n    const movieId = useSelector(state => state.movies.editedMovie.id);\n\n    const onSubmit = (formData) => {\n        dispatch(createLocation(formData, movieId));\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <h2>Create Location</h2>\n            <hr/>\n            <LocationCreateForm onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default CreateLocationPage;\n","import React, {useEffect} from 'react'\nimport {Field, reduxForm} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/edit-form.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\nimport {colors} from \"../../constants/enumConstants\";\nimport {getSinglePerson} from \"../../actions/personsActions\";\nimport {getLocations} from \"../../actions/locationsActions\";\nimport {useHistory} from \"react-router-dom\";\n\nconst EditPersonForm = (props) => {\n    const {handleSubmit, pristine, reset, submitting, id} = props\n    const dispatch = useDispatch();\n    const person = useSelector(state => state.person.editedPerson);\n    const locationList = useSelector(state => state.location.locationsList)\n    const history = useHistory();\n\n    useEffect(() => {\n        dispatch(getSinglePerson(id));\n        dispatch(getLocations());\n    }, []);\n\n    useEffect(() => {\n        props.reset();\n        props.initialize({\n            id: person.id,\n            name: person.name,\n            weight: person.weight,\n            eyeColor: person.eyeColor,\n            birthday: person.birthday,\n            locations: person.location.id\n        });\n    }, [person, locationList])\n\n    function handleEditLocationSubmit(evt) {\n        evt.preventDefault();\n        let element = document.getElementById(\"locations\");\n        history.push(\"/my-app/location/edit/\" + element.value);\n    }\n\n    function handleCreateLocationSubmit(evt) {\n        evt.preventDefault();\n        history.push(\"/my-app/location/new\");\n    }\n\n    return (\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\n            <div className={\"movie-form\"}>\n                <h3>Director</h3>\n                <div className=\"label\">Location name</div>\n\n                <div className={\"buttons-div\"}>\n                    <Field name=\"locations\" id=\"locations\"\n                           component=\"select\" label=\"Coordinates\">\n                        {locationList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\n                    </Field>\n                    <button id={\"location-form-but\"} onClick={handleEditLocationSubmit}>Edit</button>\n                    <button id={\"location-form-but\"} onClick={handleCreateLocationSubmit}>Create</button>\n                </div>\n                <Field name=\"name\" type=\"text\"\n                       component={renderedInputField} label=\"Name\"\n                    /* validate={[required]}*/\n                />\n                <Field name=\"weight\" type=\"number\"\n                       component={renderedInputField} label=\"Weight\"\n                    /* validate={[required]}*/\n                />\n\n                <Field name=\"eyeColor\" type=\"text\"\n                       component={renderedInputField} label=\"Passport ID\">\n                </Field>\n                <Field name=\"birthday\" type=\"text\"\n                       component={renderedInputField} label=\"Birthday\">\n                </Field>\n                <div>\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\n                </div>\n            </div>\n\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'edit-person-form',\n    keepDirtyOnReinitialize: true\n})(EditPersonForm)","import '../../css/table-layout.css';\nimport {useParams} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {updatePerson} from \"../../actions/personsActions\";\nimport EditPersonForm from \"../editForms/EditPersonForm\";\n\n\nfunction EditPersonPage() {\n    const {id} = useParams();\n    const dispatch = useDispatch();\n    const movieId = useSelector(state => state.movies.editedMovie.id);\n\n    const onSubmit = (formData) => {\n        dispatch(updatePerson(formData, movieId));\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <h2>Edit Person (ID: {id})</h2>\n            <hr/>\n            <EditPersonForm id={id} onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default EditPersonPage;\n","import React, {useEffect} from 'react'\nimport {Field, reduxForm} from 'redux-form'\nimport '../../css/app.css';\nimport '../../css/edit-form.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\nimport {colors} from \"../../constants/enumConstants\";\nimport {getLocations} from \"../../actions/locationsActions\";\n\nconst CreatePersonForm = (props) => {\n    const {handleSubmit, pristine, reset, submitting, id} = props\n    const dispatch = useDispatch();\n    const locationList = useSelector(state => state.location.locationsList)\n\n    useEffect(() => {\n        dispatch(getLocations());\n    }, []);\n\n    useEffect(() => {\n        props.reset();\n        props.initialize({\n            locations: locationList[0].id,\n            eyeColor: colors[0]\n        });\n    }, [locationList])\n\n    return (\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\n            <div className={\"movie-form\"}>\n                <h3>Director</h3>\n                <div className=\"label\">Location name</div>\n                <Field name=\"locations\" id=\"locations\"\n                       component=\"select\" label=\"Coordinates\">\n                    {locationList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\n                </Field>\n                <Field name=\"name\" type=\"text\"\n                       component={renderedInputField} label=\"Name\"\n                    /*validate={[required]}*/\n                />\n                <Field name=\"weight\" type=\"number\"\n                       component={renderedInputField} label=\"Weight\"\n                    /*validate={[required]}*/\n                />\n\n                <Field name=\"eyeColor\" type=\"text\"\n                       component={renderedInputField} label=\"Passport ID\">\n                </Field>\n                <Field name=\"birthday\" type=\"text\"\n                       component={renderedInputField} label=\"Birthday\">\n                </Field>\n                <div>\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\n                </div>\n            </div>\n\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'create-person-form',\n})(CreatePersonForm)","import '../../css/table-layout.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport CreatePersonForm from \"../createForms/CreatePersonForm\";\nimport {createPerson} from \"../../actions/personsActions\";\n\n\nfunction CreatePersonPage() {\n\n    const dispatch = useDispatch();\n    const movieId = useSelector(state => state.movies.editedMovie.id);\n\n    const onSubmit = (formData) => {\n        dispatch(createPerson(formData, movieId));\n    };\n\n    return (\n        <div className=\"table-layout\">\n            <h2>Create Person</h2>\n            <hr/>\n            <CreatePersonForm onSubmit={onSubmit}/>\n        </div>\n    );\n}\n\nexport default CreatePersonPage;\n","export const SET_GENRE_COUNT = \"SET_GENRE_COUNT\"\nexport const SET_GENRE = \"SET_GENRE\"\nexport const SET_LENGTH = \"SET_LENGTH\"\nexport const SET_LENGTH_COUNT = \"SET_LENGTH_COUNT\"\nexport const SET_SCREENWRITER = \"SET_SCREENWRITER\"\nexport const SET_SCREENWRITER_LIST = \"SET_SCREENWRITER_LIST\"","import '../../css/table-layout.css';\nimport {genres} from \"../../constants/enumConstants\";\nimport React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {SET_GENRE_COUNT} from \"../../constants/additionalActionsConsts\";\nimport {getGenreCount} from \"../../actions/additionalTasksActions\";\n\nfunction GenreTaskPage() {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [localGenre, setLocalGenre] = useState(\"\");\n    const genreCount = useSelector(state => state.additional.genreCount);\n\n    useEffect(() => {\n        return history.listen(location => {\n            if (history.action === 'POP') {\n                dispatch({\n                    type: SET_GENRE_COUNT,\n                    payload: \"\"\n                });\n            } else {\n\n            }\n\n        })\n    }, [])\n\n    function redirectOnMain() {\n        history.push(\"/my-app\");\n        dispatch({\n            type: SET_GENRE_COUNT,\n            payload: \"\"\n        });\n    }\n\n    function handleOnChangeGenre(event) {\n        let input = event.target.value;\n        setLocalGenre(input);\n        if (input !== \"\")\n            dispatch(getGenreCount(input));\n        else\n            dispatch({\n                type: SET_GENRE_COUNT,\n                payload: \"\"\n            });\n    }\n\n    function handleOnFocusGenre(event) {\n        setLocalGenre(\"\");\n        dispatch({\n            type: SET_GENRE_COUNT,\n            payload: \"\"\n        });\n    }\n\n    return (\n        <div className=\"task-layout\">\n            <h1>Genre task</h1>\n            <div className={\"add-task-container\"}>\n                <div>How many movies exist with genre equals to</div>\n                <select className={\"add-select\"} value={localGenre}\n                        onChange={handleOnChangeGenre}\n                        onFocus={handleOnFocusGenre}>\n                    {genres.map(o => <option key={o} value={o}>{o}</option>)}\n                </select>\n            </div>\n            {genreCount !== \"\" &&\n            <div className={\"answer\"}> Answer: {genreCount}</div>\n            }\n            <button className={\"back-movie-but\"} onClick={redirectOnMain}>BACK TO MOVIES</button>\n        </div>\n    );\n}\n\nexport default GenreTaskPage;\n","import {ADDITIONAL_SERVLET, BASE} from \"../constants/backendConstants\";\nimport {convert, options} from \"../utils/xmlUtils\";\nimport {SET_GENRE_COUNT, SET_LENGTH_COUNT, SET_SCREENWRITER_LIST} from \"../constants/additionalActionsConsts\";\nimport Notifications from \"react-notification-system-redux\";\nimport {serverException} from \"../notifications/sendNotification\";\n\nexport function getGenreCount(genre) {\n    return (dispatch) => {\n        const url = BASE + ADDITIONAL_SERVLET + \"?genre=\" + genre;\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n        })\n            .then(response => {\n                if (!response.ok)\n                    throw response;\n                return response.text();\n            })\n            .then(response => {\n                console.log(response);\n                const result = JSON.parse(response)\n                dispatch({\n                    type: SET_GENRE_COUNT,\n                    payload: result.count\n                });\n            })\n            .catch(error => {\n                error.text.then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}\n\nexport function getLengthCount(length) {\n    console.log(\"LENGTH = \" + length);\n    return (dispatch) => {\n        const url = BASE + ADDITIONAL_SERVLET + \"?oscarsCount=\" + length;\n        console.log(url);\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n        })\n            .then(response => {\n                if (!response.ok)\n                    throw response;\n                return response.text();\n            })\n            .then(response => {\n                console.log(response);\n                const result = JSON.parse(response)\n                dispatch({\n                    type: SET_LENGTH_COUNT,\n                    payload: result.count\n                });\n            })\n            .catch(error => {\n                error.text().then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}\n\nexport function getScreenWriterList(id) {\n    return (dispatch) => {\n        const url = BASE + ADDITIONAL_SERVLET + \"?director=\" + id;\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/xml; charset=utf-8'\n            },\n        })\n            .then(response => {\n                console.log(\"STATUS \" + response.status)\n                if (!response.ok)\n                    throw response;\n                return response.text();\n            })\n            .then(response => {\n                const result = JSON.parse(response)\n                dispatch({\n                    type: SET_SCREENWRITER_LIST,\n                    payload: result.personsList\n                });\n            })\n            .catch(error => {\n                error.text().then(errorMessage => {\n                    const result = JSON.parse(errorMessage)\n                    const msg = result.message;\n                    dispatch(Notifications.error(serverException(msg)));\n                })\n            });\n    }\n}","import '../../css/table-layout.css';\nimport React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {SET_LENGTH_COUNT} from \"../../constants/additionalActionsConsts\";\nimport {getLengthCount} from \"../../actions/additionalTasksActions\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction DurationTaskPage() {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const durationCount = useSelector(state => state.additional.lengthCount);\n    const [localDuration, setLocalDuration] = useState(\"\");\n\n\n    useEffect(() => {\n        return history.listen(location => {\n            if (history.action === 'POP') {\n                dispatch({\n                    type: SET_LENGTH_COUNT,\n                    payload: \"\"\n                });\n            } else {\n\n            }\n\n        })\n    }, [])\n\n    function handleOnChangeDuration(event) {\n        let input = event.target.value;\n        setLocalDuration(input);\n    }\n\n    function handleOnFocusDuration(event) {\n        setLocalDuration(\"\");\n        dispatch({\n            type: SET_LENGTH_COUNT,\n            payload: \"\"\n        });\n    }\n\n    function handleOnBlurDuration(event) {\n        let input = event.target.value;\n        if (input !== \"\" && Number.isInteger(Number(input)) && Number(input) > 0) {\n            dispatch(getLengthCount(input));\n        } else {\n            setLocalDuration(\"\")\n        }\n    }\n\n    function redirectOnMain() {\n        dispatch({\n            type: SET_LENGTH_COUNT,\n            payload: \"\"\n        });\n        history.push(\"/my-app\");\n    }\n\n    return (\n        <div className=\"task-layout\">\n            <h1>Duration task</h1>\n            <div className={\"add-task-container\"}>\n                <div>How many movies exist with oscars count greater than</div>\n                <input type={\"number\"} className={\"add-input\"} value={localDuration}\n                       onChange={handleOnChangeDuration}\n                       onFocus={handleOnFocusDuration}\n                       onBlur={handleOnBlurDuration}/>\n            </div>\n            {durationCount !== \"\" &&\n            <div className={\"answer\"}> Answer: {durationCount}</div>\n            }\n            <button className={\"back-movie-but\"} onClick={redirectOnMain}>BACK TO MOVIES</button>\n        </div>\n    );\n}\n\nexport default DurationTaskPage;\n","import '../css/table-header.css';\nimport '../css/app.css';\nimport {useDispatch} from \"react-redux\";\n\n\nfunction PersonTableHeader() {\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"table-header base\" id=\"table-header\">\n\n            <div className=\"id-div\">\n                <span>Id</span>\n            </div>\n            <div>\n                <span>Name</span>\n            </div>\n            <div>\n                <span>Weight</span>\n            </div>\n            <div>\n                <span>Eye Color</span>\n            </div>\n            <div>\n                <span>Location</span>\n            </div>\n        </div>\n    );\n}\n\nexport default PersonTableHeader;\n","import \"../css/table-row.css\"\nimport '../css/app.css';\n\nfunction PersonTableRow(props) {\n    const person = props.person;\n    const personId = person.id;\n\n    return (\n        <div className=\"table-row base\">\n            <div className=\"id-div\">{personId}</div>\n            <div>{person.name}</div>\n            <div>{person.weight}</div>\n            <div>{person.eyeColor}</div>\n            <div>{person.location.name}</div>\n        </div>\n    );\n}\n\nexport default PersonTableRow;\n","import PersonTableRow from \"./PersonTableRow\";\n\nfunction PersonList(props) {\n    const screenwriterList = props.screenwriterList;\n    // console.log(\"SCREENWRITER LIST = \" + screenwriterList)\n    let listItems;\n    if (screenwriterList === undefined) {\n        return (\n            <div className=\"table-row base id-div\">\n                <div className=\"id-div\">No data.</div>\n            </div>\n        );\n    }\n    if (!Array.isArray(screenwriterList)) {\n        console.log(\"NOT ARRAY\")\n        listItems = <PersonTableRow person={screenwriterList} key={screenwriterList.id}/>\n    } else {\n        listItems = screenwriterList.map((person) =>\n            <PersonTableRow person={person} key={person.id}/>\n        );\n    }\n    return (\n        <div>{listItems}</div>\n    );\n}\n\nexport default PersonList;","import '../css/movie-table.css';\nimport PersonTableHeader from \"./PersonTableHeader\";\nimport PersonList from \"./PersonList\";\nimport {useSelector} from \"react-redux\";\n\nfunction PersonTable() {\n    const screenwriterList = useSelector(state => state.additional.screenwriterList);\n\n    return (\n        <div className=\"movie-table\">\n            <PersonTableHeader/>\n            <PersonList screenwriterList={screenwriterList}/>\n        </div>\n    );\n}\n\nexport default PersonTable;","import '../../css/table-layout.css';\nimport React, {useEffect, useState} from \"react\";\nimport {getPerson} from \"../../actions/personsActions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {SET_SCREENWRITER_LIST} from \"../../constants/additionalActionsConsts\";\nimport {useHistory} from \"react-router-dom\";\nimport {getScreenWriterList} from \"../../actions/additionalTasksActions\";\nimport PersonTable from \"../../personTableComponents/PersonTable\";\n\nfunction ScreenwriterTaskPage() {\n    const dispatch = useDispatch();\n    const personList = useSelector(state => state.person.personsList);\n    const screenwriterList = useSelector(state => state.additional.screenwriterList);\n    const history = useHistory();\n    const [localDirector, setLocalDirector] = useState(\"\");\n\n\n    useEffect(() => {\n        dispatch(getPerson());\n    }, []);\n\n    useEffect(() => {\n        return history.listen(location => {\n            if (history.action === 'POP') {\n                dispatch({\n                    type: SET_SCREENWRITER_LIST,\n                    payload: []\n                });\n            } else {\n\n            }\n\n        })\n    }, [])\n\n    function redirectOnMain() {\n        history.push(\"/my-app\");\n        dispatch({\n            type: SET_SCREENWRITER_LIST,\n            payload: []\n        });\n    }\n\n    function handleOnChangeScreenwriter(event) {\n        let input = event.target.value;\n        setLocalDirector(input)\n        if (input !== \"\")\n            dispatch(getScreenWriterList(input));\n    }\n\n\n    return (\n        <div className=\"task-layout\">\n            <h1>Director task</h1>\n            <div className={\"add-task-container\"}>\n                <div>List all movies with director less than</div>\n\n\n                <input type={\"text\"} className={\"add-input\"} value={localDirector}\n                       onChange={handleOnChangeScreenwriter}\n                       //onFocus={handleOnFocusDuration}\n                       //onBlur={handleOnBlurDuration}\n                       />\n                {personList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\n\n                {/*<select className={\"add-select\"}*/}\n                {/*        onChange={handleOnChangeScreenwriter}>*/}\n                {/*    {personList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}*/}\n                {/*</select>*/}\n            </div>\n            {(!Array.isArray(screenwriterList) || screenwriterList.length > 0) &&\n            < PersonTable/>\n            }\n\n            <button className={\"back-movie-but\"} onClick={redirectOnMain}>BACK TO MOVIES</button>\n        </div>\n    );\n}\n\nexport default ScreenwriterTaskPage;\n","import '../css/app.css';\nimport TablePage from \"./movieTableComponents/TablePage\";\nimport Notifications from 'react-notification-system-redux';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport MovieEditPage from \"./editPages/MovieEditPage\";\nimport CreateMoviePage from \"./createPages/CreateMoviePage\";\nimport createBrowserHistory from 'history/createBrowserHistory'\nimport {COORDINATE, DATE, DURATION, GENRE, ID, NAME, OSCAR, RATING, WRITER} from \"../constants/filterConstants\";\nimport IdFilterPage from \"./filterPages/IdFilterPage\";\nimport NameFilterPage from \"./filterPages/NameFilterPage\";\nimport CoordinateFilterPage from \"./filterPages/CoordinateFilterPage\";\nimport DateFilterPage from \"./filterPages/DateFilterPage\";\nimport OscarFilterPage from \"./filterPages/OscarFilterPage\";\nimport DurationFilterPage from \"./filterPages/DurationFilterPage\";\nimport GenreFilterPage from \"./filterPages/GenreFilterPage\";\nimport RatingFilterPage from \"./filterPages/RatingFilterPage\";\nimport ScreenWriterFilterPage from \"./filterPages/ScreenWriterFilterPage\";\nimport Modal from \"./modal/Modal\";\nimport EditCoordinatesPage from \"./editPages/EditCoordinatesPage\";\nimport CreateCoordinatesPage from \"./createPages/CreateCoordinatesPage\";\nimport LocationEditPage from \"./editPages/LocationEditPage\";\nimport CreateLocationPage from \"./createPages/CreateLocationPage\";\nimport EditPersonPage from \"./editPages/EditPersonPage\";\nimport CreatePersonPage from \"./createPages/CreatePersonPage\";\nimport GenreTaskPage from \"./additionalTasks/GenreTaskPage\";\nimport DurationTaskPage from \"./additionalTasks/DurationTaskPage\";\nimport ScreenwriterTaskPage from \"./additionalTasks/ScreenwriterTaskPage\";\n\nexport const history = createBrowserHistory()\n\n/*class DebugRouter extends Router {\n    constructor(props){\n        super(props);\n        console.log('initial history is: ', JSON.stringify(this.history, null,2))\n        this.history.listen((location, action)=>{\n            console.log(\n                `The current URL is ${location.pathname}${location.search}${location.hash}`\n            )\n            console.log(`The last navigation action was ${action}`, JSON.stringify(this.history, null,2));\n        });\n    }\n}*/\n\nfunction App() {\n    const notifications = useSelector(state => state.notifications);\n    const modalActive = useSelector(state => state.page.modalActive);\n    const dispatch = useDispatch();\n    const currentCriterion = useSelector(state => state.page.curCriterion);\n\n    function setActive(value) {\n        dispatch({\n            type: 'SHOW_MODAL',\n            payload: value\n        });\n    }\n\n    return (\n        <div className=\"app\">\n            <Modal active={modalActive} setActive={setActive} id=\"modal\">\n                {currentCriterion === ID && <IdFilterPage/>}\n                {currentCriterion === NAME && <NameFilterPage/>}\n                {currentCriterion === COORDINATE && <CoordinateFilterPage/>}\n                {currentCriterion === DATE && <DateFilterPage/>}\n                {currentCriterion === OSCAR && <OscarFilterPage/>}\n                {currentCriterion === DURATION && <DurationFilterPage/>}\n                {currentCriterion === GENRE && <GenreFilterPage/>}\n                {currentCriterion === RATING && <RatingFilterPage/>}\n                {currentCriterion === WRITER && <ScreenWriterFilterPage/>}\n            </Modal>\n            <Router history={history}>\n                <Switch>\n                    <Route path=\"/my-app/edit/:id\">\n                        <MovieEditPage/>\n                    </Route>\n                    <Route path=\"/my-app/coordinates/edit/:id\">\n                        <EditCoordinatesPage/>\n                    </Route>\n                    <Route path=\"/my-app/location/edit/:id\">\n                        <LocationEditPage/>\n                    </Route>\n                    <Route path=\"/my-app/person/edit/:id\">\n                        <EditPersonPage/>\n                    </Route>\n                    <Route exact path=\"/my-app/coordinates/new\">\n                        <CreateCoordinatesPage/>\n                    </Route>\n                    <Route exact path=\"/my-app/location/new\">\n                        <CreateLocationPage/>\n                    </Route>\n                    <Route exact path=\"/my-app/person/new\">\n                        <CreatePersonPage/>\n                    </Route>\n                    <Route exact path=\"/my-app/additional/genre\">\n                        <GenreTaskPage/>\n                    </Route>\n                    <Route exact path=\"/my-app/additional/duration\">\n                        <DurationTaskPage/>\n                    </Route>\n                    <Route exact path=\"/my-app/additional/screenwriter\">\n                        <ScreenwriterTaskPage/>\n                    </Route>\n                    <Route path=\"/my-app/new\">\n                        <CreateMoviePage/>\n                    </Route>\n                    <Route exact path=\"/my-app\">\n                        <TablePage/>\n                    </Route>\n                </Switch>\n            </Router>\n            <Notifications notifications={notifications}/>\n        </div>\n    );\n}\n\nexport default App;\n","import {SET_EDITED_MOVIE, SET_MOVIES} from \"../constants/movieActionsConsts\";\n\nconst initialState = {\n    movieList: [],\n    editedMovie: {\n        coordinates: {id: \"\", x: \"\", y: \"\"},\n        screenWriter: {\n            id: \"\", eyeColor: \"\", name: \"\", weight: \"\",\n            location: {id: \"\", x: \"\", name: \"\", y: \"\"}\n        },\n        director: {\n            id: \"\", eyeColor: \"\", name: \"\", weight: \"\",\n            location: {id: \"\", x: \"\", name: \"\", y: \"\"}\n        }\n    }\n};\n\nexport function movieReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_MOVIES:\n            console.log(action.payload);\n            return {\n                ...state,\n                movieList: action.payload\n            };\n        case SET_EDITED_MOVIE:\n            console.log(action.payload);\n            return {\n                ...state,\n                editedMovie: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\n","import {\n    DELETE_MOVIE,\n    REMOVE_FILTER,\n    REMOVE_SORT,\n    SET_CUR_CRITERION,\n    SET_CUR_PAGE,\n    SET_FILTER,\n    SET_ITEM_COUNT,\n    SET_PER_PAGE,\n    SET_SORT,\n    SHOW_MODAL\n} from \"../constants/pageActionsConsts\";\n\nconst initialState = {\n    perPage: 10,\n    currentPage: 1,\n    itemCount: \"\",\n    deleteItem: 0,\n    sortBy: [],\n    modalActive: false,\n    filters: [],\n    curCriterion: \"\",\n};\n\n\nexport function pageReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_PER_PAGE:\n            return {\n                ...state,\n                perPage: action.payload\n            };\n        case SET_CUR_PAGE:\n            return {\n                ...state,\n                currentPage: action.payload\n            };\n        case SET_CUR_CRITERION:\n            return {\n                ...state,\n                curCriterion: action.payload\n            };\n        case SET_ITEM_COUNT:\n            return {\n                ...state,\n                itemCount: action.payload\n            };\n        case DELETE_MOVIE:\n            return {\n                ...state,\n                deleteItem: state.deleteItem + 1\n            };\n        case SET_SORT:\n            return {\n                ...state,\n                sortBy: [...state.sortBy, action.payload]\n            };\n        case REMOVE_SORT:\n            return {\n                ...state,\n                sortBy: state.sortBy.filter(item => item !== action.payload)\n            };\n        case SHOW_MODAL:\n            return {\n                ...state,\n                modalActive: action.payload\n            };\n        case SET_FILTER:\n            return {\n                ...state,\n                filters: [...state.filters, action.payload]\n            };\n        case REMOVE_FILTER:\n            return {\n                ...state,\n                filters: state.filters.filter(item => item.name !== action.payload)\n            };\n        default:\n            return state;\n    }\n}\n\n","import {SET_COORDINATES, SET_EDITED_COORDINATES} from \"../constants/coordinatesActionsConsts\";\n\nconst initialState = {\n    coordinatesList: [{id: \"\", x: \"\", y: \"\"}],\n    editedCoordinates: {id: \"\", x: \"\", y: \"\"}\n};\n\nexport function coordinatesReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_COORDINATES:\n            console.log(action.payload);\n\n           // console.log(\"DEBUG2=\"+action.payload);\n            return {\n                ...state,\n                coordinatesList: action.payload\n            };\n        case SET_EDITED_COORDINATES:\n            console.log(action.payload);\n            return {\n                ...state,\n                editedCoordinates: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\n","import {SET_EDITED_LOCATION, SET_LOCATIONS} from \"../constants/locationActionsConsts\";\n\nconst initialState = {\n    locationsList: [{id: \"\", x: \"\", y: \"\", name: \"\"}],\n    editedLocation: {id: \"\", x: \"\", y: \"\", name: \"\"}\n};\n\nexport function locationReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_LOCATIONS:\n            console.log(action.payload);\n            return {\n                ...state,\n                locationsList: action.payload\n            };\n        case SET_EDITED_LOCATION:\n            console.log(action.payload);\n            return {\n                ...state,\n                editedLocation: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\n","import {SET_EDITED_PERSON, SET_PERSONS} from \"../constants/personActionsConsts\";\n\nconst initialState = {\n    personsList: [{id: \"\", name: \"\", weight: \"\", eyeColor: \"\", location: {}}, {\n        id: \"\",\n        name: \"\",\n        weight: \"\",\n        eyeColor: \"\",\n        location: {}\n    }],\n    editedPerson: {id: \"\", name: \"\", weight: \"\", eyeColor: \"\", location: {}}\n};\n\nexport function personReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_PERSONS:\n            return {\n                ...state,\n                personsList: action.payload\n            };\n        case SET_EDITED_PERSON:\n            return {\n                ...state,\n                editedPerson: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\n","import {\n    SET_GENRE,\n    SET_GENRE_COUNT,\n    SET_LENGTH,\n    SET_LENGTH_COUNT,\n    SET_SCREENWRITER,\n    SET_SCREENWRITER_LIST\n} from \"../constants/additionalActionsConsts\";\n\nconst initialState = {\n    genre: \"\",\n    genreCount: \"\",\n    length: \"\",\n    lengthCount: \"\",\n    screenwriter: {},\n    screenwriterList: []\n};\n\nexport function additionalTasksReducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_GENRE_COUNT:\n            return {\n                ...state,\n                genreCount: action.payload\n            };\n        case SET_GENRE:\n            return {\n                ...state,\n                genre: action.payload\n            };\n        case SET_SCREENWRITER_LIST:\n            return {\n                ...state,\n                screenwriterList: action.payload\n            };\n        case SET_LENGTH:\n            return {\n                ...state,\n                length: action.payload\n            };\n        case SET_LENGTH_COUNT:\n            return {\n                ...state,\n                lengthCount: action.payload\n            };\n        case SET_SCREENWRITER:\n            return {\n                ...state,\n                screenwriter: action.payload\n            };\n        default:\n            return state;\n    }\n}\n\n","import {combineReducers} from 'redux'\nimport {movieReducer} from './movieReducer.js'\nimport {reducer as notifications} from 'react-notification-system-redux';\nimport {pageReducer} from \"./pageReducer\";\nimport {reducer as formReducer} from 'redux-form';\nimport {coordinatesReducer} from \"./coordinatesReducer\";\nimport {locationReducer} from \"./locationReducer\";\nimport {personReducer} from \"./personReducer\";\nimport {additionalTasksReducer} from \"./additionalTasksReducer\";\n\nexport const rootReducer = combineReducers({\n    movies: movieReducer,\n    notifications: notifications,\n    page: pageReducer,\n    coordinates: coordinatesReducer,\n    location: locationReducer,\n    person: personReducer,\n    additional: additionalTasksReducer,\n    form: formReducer,\n});","import App from './components/App'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {rootReducer} from './reducer/rootReducer.js'\nimport {Provider} from \"react-redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\nimport {applyMiddleware, createStore} from 'redux';\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk, logger)),\n);\n\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}